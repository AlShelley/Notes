<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[lonelyorNotes]]></title>
  <link href="www.lonelyor.org/lonelyorNotes/atom.xml" rel="self"/>
  <link href="www.lonelyor.org/lonelyorNotes/"/>
  <updated>2018-11-22T14:21:42+08:00</updated>
  <id>www.lonelyor.org/lonelyorNotes/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[Web漏洞分类checklist]]></title>
    <link href="www.lonelyor.org/lonelyorNotes/15428591301433.html"/>
    <updated>2018-11-22T11:58:50+08:00</updated>
    <id>www.lonelyor.org/lonelyorNotes/15428591301433.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>description: 写上一个漏洞分类的checklist，方便以后补充漏洞检测方案以及更多相关内容的学习。这里面的内容不是全部，因为后续还会更新，但是更多新的内容会不会更新到博客，就不知道了。</p>
</blockquote>

<h1 id="toc_0">爆破</h1>

<p>系统、网络、应用弱口令<br/>
网站目录遍历/文件遍历<br/>
端口扫描<br/>
用户枚举和可猜测用户名<br/>
短信/邮箱轰炸<br/>
短文件名漏洞</p>

<h1 id="toc_1">不安全配置</h1>

<p>Nginx<br/>
HTTP Headers设置不当<br/>
rebots.txt<br/>
错误处理不当<br/>
flash跨域策略配置不当</p>

<p>安全配置checklist<br/>
    Web应用服务器<br/>
    数据库<br/>
    系统<br/>
    应用</p>

<h1 id="toc_2">敏感信息泄露</h1>

<p>个人敏感信息定义<br/>
应用debug信息泄露<br/>
应用堆栈信息泄露<br/>
备份文件/测试页面泄露<br/>
本地敏感信息泄露（前端保存用户密码/验证码）</p>

<h1 id="toc_3">xss跨站脚本</h1>

<p>反射型<br/>
存储型<br/>
dom型<br/>
xss蠕虫</p>

<h1 id="toc_4">请求伪造</h1>

<p>csrf跨站请求伪造<br/>
ssrf服务端请求伪造</p>

<h1 id="toc_5">注入</h1>

<p>SQL注入<br/>
CRLF注入<br/>
LDAP注入<br/>
XML注入<br/>
HTTP参数污染（HPP）<br/>
HTML注入<br/>
客户端模板注入（CSTI）<br/>
服务端模板注入（SSTI）<br/>
服务器端包含注入（SSI）<br/>
Python代码注入<br/>
PHP代码注入<br/>
反序列化漏洞</p>

<h1 id="toc_6">使用已知漏洞组件</h1>

<p>低版本组件<br/>
0day<br/>
经典漏洞（heartbleed/struts2）</p>

<h1 id="toc_7">文件类漏洞</h1>

<p>文件包含<br/>
任意文件创建/读取/上传/下载/删除</p>

<h1 id="toc_8">文件解析漏洞</h1>

<p>IIS解析漏洞<br/>
Nginx解析漏洞<br/>
Apache解析漏洞<br/>
PHP CGI解析漏洞</p>

<h1 id="toc_9">劫持类漏洞</h1>

<p>点击劫持<br/>
Jsonp劫持<br/>
WebSocket劫持<br/>
DNS劫持<br/>
二维码劫持<br/>
子域名劫持</p>

<h1 id="toc_10">业务逻辑漏洞</h1>

<p>认证<br/>
授权<br/>
会话管理</p>

<p>业务逻辑漏洞挖掘的核心是业务<br/>
对业务越熟悉，成功率越高。</p>

<p>我对业务逻辑漏洞的分类可以从两个角度来分：一、根据漏洞类型分类；二、根据业务场景分类。<br/>
业务场景举例：<br/>
    账户体系（登录、注册、改密、销户、双因素认证、上传头像、个人信息等）<br/>
    验证码（绕过、识别）<br/>
    优惠活动（优惠券、抽奖、任务、答题、刷赞、定时优惠、新用户优惠等）<br/>
    内容安全（搜索框、富文本编辑器、上传、反爬虫、社交、隐式接口、资料查询等）<br/>
    支付相关（0元支付、最大/小金额溢出、负数支付、提现、订单泄露、身份盗用、竞争条件漏洞等）</p>

<h1 id="toc_11">API安全</h1>

<p>认证<br/>
授权<br/>
会话管理<br/>
输入和输出<br/>
加密</p>

<p>未完待续...</p>

]]></content>
  </entry>
  
</feed>
