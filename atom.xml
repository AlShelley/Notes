<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[lonelyorWiki]]></title>
  <link href="http://www.lonelyor.org/lonelyorWiki/atom.xml" rel="self"/>
  <link href="http://www.lonelyor.org/lonelyorWiki/"/>
  <updated>2019-04-12T11:20:18+08:00</updated>
  <id>http://www.lonelyor.org/lonelyorWiki/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[lonelyor个人技能清单]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15550532565333.html"/>
    <updated>2019-04-12T15:14:16+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15550532565333.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>这里记录我已经知道的和计划知道的知识。每个人的路都是不一样的，但结果殊途同归。<br/>
知识有三个阶段：不知道自己不知道、知道自己知道、知道自己不知道。<br/>
智慧是：大智若愚、勤能补拙。</p>
</blockquote>

<p><figure><img src="media/15550532565333/lonelyor%20%E4%B8%AA%E4%BA%BA%E6%8A%80%E8%83%BD%E6%A0%91.png" alt="lonelyor 个人技能树"/><figcaption>lonelyor 个人技能树</figcaption></figure></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[相见欢·林花谢了春红]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15547243035014.html"/>
    <updated>2019-04-08T19:51:43+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15547243035014.html</id>
    <content type="html"><![CDATA[
<p>【作者】李煜 <br/>
【朝代】五代</p>

<p>林花谢了春红，太匆匆。无奈朝来寒雨，晚来风。<br/>
胭脂泪，相留醉，几时重。自是人生长恨，水长东。</p>

<blockquote>
<p>五代是指后梁、后唐、后晋、后汉和后周。<br/>
前蜀、后蜀、南吴、南唐、吴越、闽、楚、南汉、南平（荆南）、北汉等十余个割据政权被《新五代史》及后世史学家统称十国。<br/>
五代十国（907年—979年）是中国历史上的一段大分裂时期。这一称谓出自《新五代史》，是对五代（907年—960年）与十国（902年—979年）的合称。</p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[怎么解决"该虚拟机似乎正在使用中"问题]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15547237158216.html"/>
    <updated>2019-04-08T19:41:55+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15547237158216.html</id>
    <content type="html"><![CDATA[
<p>在用VMware虚拟机的时候，有时会发现打开虚拟机时提示“该虚拟机似乎正在使用中。如果该虚拟机未在使用，请按“获取所有权(T)”按钮获取它的所有权。否则，请按“取消(C)”按钮以防损坏。配置文件: D:\win10x64\Windows 10 x64.vmx。”这是由于虚拟机未正常关闭引起的，下面看看解决办法。</p>

<p>1.首先点击“获取所有权(T)”按钮，会发现弹出一个窗口，显示“无法打开虚拟机: D:\win10x64\Windows 10 x64.vmx获取该虚拟机的所有权失败。主机上的某个应用程序正在使用该虚拟机。配置文件: D:\win10x64\Windows 10 x64.vmx。”等信息。这说明获取所有权失败了。</p>

<p>2.当点击“取消(C)”按钮是直接退出窗口，什么也不弹出。这时发现不管点那个按钮都不能解决问题。</p>

<p>3.点击“开始”菜单，选择“文件资源管理器”。</p>

<p>4.打开“文件资源管理器”后，进入到存放此台Vmware虚拟机虚拟磁盘文件及配置文件存放的位置（也就是弹出提示窗口上的路径），在这里是D:\win10x64这个目录下，找到后缀为.lck文件夹。</p>

<p>5.然后，将后缀为.lck的文件夹删除，或者或避免删错可以移动到备份文件夹中，也可以直接重命名此文件夹，在这里将文件夹Windows 10 x64.vmx.lck改为Windows 10 x64.vmx.lck.backup。</p>

<p>6.然后重新打开虚拟机，发现此虚拟机可以正常打开了，这样就成功的解决了“该虚拟机似乎正在使用中”问题。</p>

<p>以后记得正常关机。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[arch 安装配置指南带图版]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15547068970077.html"/>
    <updated>2019-04-08T15:01:37+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15547068970077.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">虚拟机准备</h2>

<p><figure><img src="media/15547068970077/15547069447878.jpg" alt=""/></figure></p>

<p><figure><img src="media/15547068970077/15547069791316.jpg" alt=""/></figure></p>

<p><figure><img src="media/15547068970077/15547070232740.jpg" alt=""/></figure></p>

<p><figure><img src="media/15547068970077/15547070491488.jpg" alt=""/></figure></p>

<p><figure><img src="media/15547068970077/15547070734913.jpg" alt=""/></figure></p>

<p><figure><img src="media/15547068970077/15547071198237.jpg" alt=""/></figure></p>

<p><figure><img src="media/15547068970077/15547071592651.jpg" alt=""/></figure></p>

<p><figure><img src="media/15547068970077/15547072404641.jpg" alt=""/></figure></p>

<p><figure><img src="media/15547068970077/15547073247770.jpg" alt=""/></figure></p>

<p><figure><img src="media/15547068970077/15547075090849.jpg" alt=""/></figure></p>

<p><figure><img src="media/15547068970077/15547075838610.jpg" alt=""/></figure></p>

<p>进入系统后首先检查系统是否联通<br/>
<figure><img src="media/15547068970077/15547080621623.jpg" alt=""/></figure></p>

<h2 id="toc_1">分区</h2>

<p>进入 parted 命令进行分区操作<br/>
<figure><img src="media/15547068970077/15547082391052.jpg" alt=""/></figure></p>

<p>建立 gpt 分区表<br/>
<figure><img src="media/15547068970077/15547083585597.jpg" alt=""/></figure></p>

<p>建立 ESP 分区，用于挂载 efi 分区（uefi 模式必须要有 efi 分区）<br/>
<figure><img src="media/15547068970077/15547084670126.jpg" alt=""/></figure></p>

<p>创建交换分区，范围从550M 到8G<br/>
<figure><img src="media/15547068970077/15547086682024.jpg" alt=""/></figure></p>

<p>剩下的创建为主分区<br/>
<figure><img src="media/15547068970077/15547087728757.jpg" alt=""/></figure></p>

<p>设定ESP分区标志：boot<br/>
<figure><img src="media/15547068970077/15547088810797.jpg" alt=""/></figure></p>

<p>使用 p 查看分区情况，然后使用 q 退出 parted<br/>
<figure><img src="media/15547068970077/15547089223456.jpg" alt=""/></figure></p>

<p>查看硬盘分区状态，图中可以看到 sda1、sda2、sda3 分别为我们刚才创建的三个分区。<br/>
<figure><img src="media/15547068970077/15547089844964.jpg" alt=""/></figure></p>

<p>现在对三个分区分别进行格式化操作<br/>
<figure><img src="media/15547068970077/15547092045028.jpg" alt=""/></figure></p>

<p>挂载主分区/dev/sda3，创建 efi 目录并将 efi 分区 /dev/sda1 挂载到 efi 目录下，最后激活交换分区 /dev/sda2。<br/>
<figure><img src="media/15547068970077/15547096145622.jpg" alt=""/></figure></p>

<p>至此分区结束，下面开始系统安装过程</p>

<h2 id="toc_2">安装系统</h2>

<p>更改软件源为中国源<br/>
首先打开源文件<br/>
<figure><img src="media/15547068970077/15547097960961.jpg" alt=""/></figure></p>

<p>ctrl+w 然后输入 china 搜索中国源<br/>
<figure><img src="media/15547068970077/15547098842992.jpg" alt=""/></figure></p>

<p>再次按 ctrl+w 并输入 china 可以搜索其他中国源，这里推荐使用 ustc 或163。<br/>
找到指定的源之后，将光标调整到行首，然后按 ctrl+k 执行剪贴操作，然后移动光标到首行，按 ctrl+u 执行粘贴操作。使用上述方法将 ustc 和163源放在最上面，这样可以提高软件下载速度。<br/>
<figure><img src="media/15547068970077/15547102886290.jpg" alt=""/></figure></p>

<p>接下来按 ctrl+o 并回车保存修改，然后按 ctrl+x 退出编辑器。</p>

<p>输入<code>head -n 15 文件名</code>显示指定文件的前15行内容。来查看是否修改成功。<br/>
<figure><img src="media/15547068970077/15547104407258.jpg" alt=""/></figure></p>

<p>安装基础包，这里会弹出几个提示，一路按回车确认即可。<br/>
<figure><img src="media/15547068970077/15547106618484.jpg" alt=""/></figure></p>

<p>生成 fstab 文件<br/>
<code>genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</code><br/>
<figure><img src="media/15547068970077/15547111978314.jpg" alt=""/></figure></p>

<p>进入 chroot 环境即进入到新安装的系统。然后安装 gurb 启动程序。<br/>
<figure><img src="media/15547068970077/15547115736898.jpg" alt=""/></figure></p>

<p><figure><img src="media/15547068970077/15547116310713.jpg" alt=""/></figure></p>

<p>把 grub 引导管理器安装到 efi 分区里<br/>
<figure><img src="media/15547068970077/15547118108821.jpg" alt=""/></figure></p>

<p>修改主机名为 lonelyor，使用<code>nano /etc/hostname</code>打开文件然后输入 lonelyor，再按 ctrl+o 保存文件，然后 ctrl+x 退出编辑器即可。查看修改是否成功。<br/>
<figure><img src="media/15547068970077/15547121379520.jpg" alt=""/></figure></p>

<p>修改 hosts 文件<br/>
<figure><img src="media/15547068970077/15547123034205.jpg" alt=""/></figure></p>

<p>设置 root 密码</p>

<p><figure><img src="media/15547068970077/15547123951237.jpg" alt=""/></figure></p>

<p>添加普通用户并为该用户设置密码<br/>
<figure><img src="media/15547068970077/15547124838351.jpg" alt=""/></figure></p>

<p>设置时区与编码，编辑 /etc/locale.gen 文件，去掉en_US.UTF-8,zh_CN.UTF-8,zh_CN.GBK前面的#符号。然后保存并退出编辑器。<br/>
<figure><img src="media/15547068970077/15547126694587.jpg" alt=""/></figure></p>

<p>输入 locale-gen 重建编码表<br/>
<figure><img src="media/15547068970077/15547127405137.jpg" alt=""/></figure></p>

<p>设置系统时区，然后同步本地时钟<br/>
<figure><img src="media/15547068970077/15547128041918.jpg" alt=""/></figure></p>

<p>基本系统安装完毕，现在输入 exit 退出 chroot，然后输入 reboot 重启系统。<br/>
<figure><img src="media/15547068970077/15547129531734.jpg" alt=""/></figure><br/>
至此，完成了基本系统的安装。</p>

<h2 id="toc_3">配置系统</h2>

<p>进入系统后输入刚才设置的账号和密码，即可登录系统，按照之前的设置，我拥有两个账号，一个是 root，另一个是 lonelyor。</p>

<p>现在依次点击：虚拟机、快照、拍摄快照，来保存目前的进度，拍摄快照非常重要，在进行重要操作，如更新系统，对系统文件进行设置之前，一定要记得拍摄快照。并养成定期拍摄快照的习惯。</p>

<p>重启后使用 ping 检查网络是否畅通。<br/>
<figure><img src="media/15547068970077/15547133030679.jpg" alt=""/></figure></p>

<p>这里发现网络不通，可能是 dhcp 的问题，设置 dhcp。由于 /etc 下的文件是系统文件，修改时需要 root 权限，因此这里输入 sudo 来临时获取 root 权限。<br/>
<figure><img src="media/15547068970077/15547133860799.jpg" alt=""/></figure></p>

<p>结果发现提示我们的账户不在 sudoers 中，这里需要单独设置，具体方法我们后续再介绍，这里我们使用 su 直接提升权限至 root。<br/>
<figure><img src="media/15547068970077/15547135280940.jpg" alt=""/></figure></p>

<p>然后<code>nano /etc/rc.conf</code>再次修改文件，修改后查看是否修改成功。<br/>
<figure><img src="media/15547068970077/15547136346391.jpg" alt=""/></figure></p>

<p>接着输入<code>dhcpcd</code>启动 dhcp 服务。<br/>
<figure><img src="media/15547068970077/15547137236716.jpg" alt=""/></figure></p>

<p>再次使用 ping 检查网络是否畅通<br/>
<figure><img src="media/15547068970077/15547137679260.jpg" alt=""/></figure></p>

<p>配置 archlinuxcn 源并安装 yaourt，就可以使用 aur 中的超量软件了。</p>

<pre class="line-numbers"><code class="language-shell">修改`/etc/pacman.conf`文件
在文件后添加如下语句
[archlinuxcn]
SigLevel = Optional TrustedOnly
Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch
</code></pre>

<p><figure><img src="media/15547068970077/15547140679869.jpg" alt=""/></figure></p>

<p>更新软件并导入 key</p>

<pre class="line-numbers"><code class="language-shell">导入GPG Key
sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring
</code></pre>

<p><figure><img src="media/15547068970077/15547141254558.jpg" alt=""/></figure><br/>
安装 yaourt<br/>
<code>pacman -S yaourt</code></p>

<p>添加sudo<br/>
<code>pacman -S sudo</code><br/>
打开 <code>/etc/sudoers</code> 文件，找到 <code>root ALL=(ALL) ALL</code> 并依葫芦画瓢添加 <code>lonelyor ALL=(ALL) ALL</code>，然后取消<code>%wheel ALL=(ALL) NOPASSWD: ALL</code>前的注释。<br/>
<figure><img src="media/15547068970077/15547165486151.jpg" alt=""/></figure></p>

<p>修改 watchdog did not stop，降低关键等待时间。<br/>
编辑<code>/etc/systemd/system.conf</code>文件：<br/>
将<br/>
DefaultTimeoutStopSec=90s<br/>
更改为<br/>
DefaultTimeoutStopSec=9s<br/>
将终止服务的等待时间更改为9秒，从而解决关机缓慢的问题。<br/>
我顺手将其他时间长的都改短了。<br/>
<figure><img src="media/15547068970077/15547145148991.jpg" alt=""/></figure></p>

<p>安装图形界面，输入下列命令一路回车即可。</p>

<pre class="line-numbers"><code class="language-shell">pacman -S xorg xorg-server xorg-xinit
pacman -S plasma
pacman -S sddm
systemctl enable sddm
</code></pre>

<p>安装触摸板驱动<br/>
<code>pacman -S xf86-input-synaptics</code></p>

<p>安装字体<br/>
<code>pacman -S ttf-dejavu wqy-zenhei ttf-inconsolata</code></p>

<p>安装小工具合集<br/>
<code>pacman -S konsole net-tools p7zip wget cmake curl</code></p>

<p>安装搜狗输入法和图形化配置工具</p>

<pre class="line-numbers"><code class="language-shell">sudo pacman -S fcitx-sogoupinyin
sudo pacman -S fcitx-im
sudo pacman -S fcitx-configtool 
</code></pre>

<p>需要修改配置文件<code>/home/lonelyor/.xprofile</code><br/>
添加如下语句</p>

<pre class="line-numbers"><code class="language-text">export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export XMODIFIERS=&quot;@im=fcitx&quot;
</code></pre>

<p>安装 networkmanager 开机启动网络管理程序，你没看错，这两个字母确实是大写。<br/>
<code>pacman -S networkmanager</code><br/>
<code>systemctl enable NetworkManager.service</code> </p>

<p>安装 ntfs 文件系统识别软件，这样linux 就能识别 windows 使用的 ntfs 文件系统了。<br/>
<code>pacman -S ntfs-3g dosfstools</code></p>

<p>安装chrome<br/>
<code>yaourt -S google-chrome</code></p>

<p>文件管理器<br/>
<code>pacman -S dolphin</code></p>

<p>安装看图工具<br/>
<code>pacman -S gpicview</code></p>

<p>安装host修改工具<br/>
<code>yaourt -S switchhosts-bin</code><br/>
由于 yaourt 不能使用 root 权限进行软件安装，因为我们要切换到 lonelyor 用户。使用命令<code>su lonelyor</code>即可。<br/>
<figure><img src="media/15547068970077/15547172677600.jpg" alt=""/></figure><br/>
然后一路回车即可安装软件。</p>

<p>安装vscode编辑器<br/>
<code>yaourt -S visual-studio-code-bin</code></p>

<p>命令补全工具<br/>
<code>pacman -S bash-completion</code></p>

<p>安装 vmtools</p>

<pre class="line-numbers"><code class="language-shell">pacman -S open-vm-tools
pacman -S linux-headers
yaourt -S open-vm-tools-dkms gtkmm gtkmm3
systemctl enable vmware-vmblock-fuse
systemctl enable vmtoolsd
</code></pre>

<p>编辑 ~/.xinitrc或~/.xprofile 在文件开头添加以下内容，来设置中文显示</p>

<pre class="line-numbers"><code class="language-text">export LANG=zh_CN.UTF-8
export LANGUAGE=zh_CN:en_US
export LC_CTYPE=en_US.UTF-8
</code></pre>

<p>若要图形界面用户设置全面的中文显示<br/>
添加如下内容到文件~/.xprofile文件中<br/>
<code>export LC_ALL=&quot;zh_CN.UTF-8&quot;</code></p>

<p>全部安全配置完成，输入<code>reboot</code>重启即可。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[arch 安装配置指南]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15547067485409.html"/>
    <updated>2019-04-08T14:59:08+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15547067485409.html</id>
    <content type="html"><![CDATA[
<pre class="line-numbers"><code class="language-shell"># parted
# mklabel
# msdos
(parted)#mkpart primary ext4 1M 200M
(parted)#set 1 boot on
(parted)#mkpart primary linux-swap 200M 8.5G
(parted)#mkpart primary ext4 8.5G -1
#q

# mkfs.etx4 /dev/sda1
# mkfs.etx4 /dev/sda3
# mkswap /dev/sda2
# swapon /dev/sda2
# mount /dev/sda3 /mnt
# cd /mnt
# mkdir boot
# mount /dev/sda1 /mnt/boot
换源成China nano /etc/pacman.d/mirrorlist
nano基本操作：
按Ctrl+6（或者Alt+A）做标记；复制一整行：Alt+6；剪切一整行：Ctrl+K；粘贴：Ctrl+U；用Ctrl+Y到上一页，Ctrl+V到下一页。“^”表示Ctrl键，“M”表示 Alt键。
# pacstrap /mnt base base-devel
# genfstab -U /mnt &gt;&gt; /mnt/etc/fstab
# nano /mnt/etc/fstab

# arch-chroot /mnt /bin/bash
# pacman -S grub
双系统的话，还需要安装os-prober
如果使用Intel CPU的话，则需要安装 intel-ucode 并启用因特尔微码更新
# grub-install --recheck /dev/sda
# grub-mkconfig -o /boot/grub/grub.cfg
# exit
# pacman -Syu
# reboot
</code></pre>

<h1 id="toc_0">基本配置</h1>

<ul>
<li>修改主机名
<code>nano /etc/hostname</code>
<code>lonelyor</code></li>
<li>修改host
<code>nano /etc/hosts</code>
<code>127.0.0.1  localhost</code>
<code>::1        localhost</code>
<code>127.0.1.1  myhostname.localdomain  myhostname</code></li>
<li>启动dhcp
<code># vi /etc/rc.conf</code>
添加 interface = eth0 
<code># dhcpcd</code></li>
<li>配置编码<br/>
首先释放en_US.UTF-8,保证系统正常工作<br/>
然后 Ctrl+_，Ctrl+v 进入最后一行释放zh_CN.UTF-8保证中文<br/>
保存退出<br/>
然后生成编码并使用，配置系统优先语言环境为英文
<code>shell
# nano /etc/locale.gen<br/>
取消utf-8的注释，然后<br/>
# locale-gen<br/>
# echo LANG=en_US.UTF-8 &gt; /etc/locale.conf<br/>
# locale<br/>
在~/.xinitrc中添加<br/>
export LANG=zh_CN.UTF-8<br/>
export LANGUAGE=zh_CN:en_US<br/>
export LC_CTYPE=en_US.UTF-8<br/>
~/.xprofile添加<br/>
export LANG=zh_CN.UTF-8<br/>
export LC_ALL=&quot;zh_CN.UTF-8&quot;<br/>
export LANG=zh_CN.UTF-8<br/>
export LANGUAGE=zh_CN:en_US<br/>
export LC_CTYPE=en_US.UTF-8<br/>
# pacman -S kde-l10n-zh_cn firefox-i18n-zh-cn libreoffice-still-zh-cn
</code>
安装输入法前端
<code># pacman -S kimtoy</code></li>
<li>配置archlinuxcn源
<code>shell
修改`/etc/pacman.conf`文件<br/>
在文件后添加如下语句<br/>
[archlinuxcn]<br/>
SigLevel = Optional TrustedOnly<br/>
Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch
</code>
<code>shell
导入GPG Key<br/>
sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring
</code></li>
<li>设置root密码
<code>#passwd</code></li>
<li>添加用户和sudo
<code>shell
useradd -m -g users -G wheel -s /bin/bash lonelyor<br/>
passwd lonelyor<br/>
pacman -S sudo</code><br/>
打开 <code>/etc/sudoers</code> 文件，找到 <code>root ALL=(ALL) ALL</code> 并依葫芦画瓢添加 <code>lonelyor ALL=(ALL) ALL</code> 即可。<br/>
* watchdog did not stop<br/>
编辑<code>/etc/systemd/system.conf</code>文件：<br/>
将<br/>
DefaultTimeoutStopSec=90s<br/>
更改为<br/>
DefaultTimeoutStopSec=10s<br/>
将终止服务的等待时间更改为10秒，从而解决关机缓慢的问题。<br/>
我顺手将其他时间长的都改短了。<br/>
* 安装桌面环境kde
<code>shell
pacman -S xorg xorg-server xorg-xinit<br/>
pacman -S plasma<br/>
pacman -S sddm<br/>
systemctl enable sddm
</code>
* 安装触摸板驱动
<code>pacman -S xf86-input-synaptics</code>
* 小工具合集
<code>konsole net-tools p7zip wget cmake curl</code>
* 安装字体<br/>
noto-fonts-sc(aur)<br/>
ttf-ms-win10-zh_cn(aur)<br/>
wqy-zenhei<br/>
wqy-bitmapfont<br/>
noto-fonts-emoji<br/>
号称最好看的编程字体<br/>
ttf-inconsolata<br/>
ttf-monaco<br/>
# 软件安装<br/>
* 安装搜狗输入法
<code>shell
# sudo pacman -S fcitx-sogoupinyin<br/>
# sudo pacman -S fcitx-im<br/>
# sudo pacman -S fcitx-configtool # 图形化的配置工具<br/>
需要修改配置文件`~/.xprofile`<br/>
添加如下语句<br/>
export GTK_IM_MODULE=fcitx<br/>
export QT_IM_MODULE=fcitx<br/>
export XMODIFIERS=&quot;@im=fcitx&quot;<br/>
重新登录之后就可以使用中文输入法啦
</code>
* 安装字体
<code>pacman -S ttf-dejavu wqy-zenhei wqy-microhei</code></li>
</ul>

<ul>
<li>安装文件系统支持
<code>sudo pacman -S ntfs-3g dosfstools</code></li>
<li>安装chrome
<code>yaourt -S google-chrome</code></li>
<li>安装网易云音乐
<code>pacman -S netease-cloud-music</code></li>
<li>安装v2ray
<code>shell
wget https://install.direct/go.sh<br/>
sudo bash go.sh<br/>
sudo systemctl start v2ray<br/>
编辑 /etc/v2ray/config.json 文件来配置客户端
</code></li>
<li>安装host修改工具
<code>yaourt -S switchhosts-bin</code></li>
<li>安装fish
<code>pacman -S fish</code></li>
<li>更改默认shell为fish
<code>sudo -u lonelyor chsh -s /usr/bin/fish</code></li>
<li>安装wps
<code>yaourt wps</code></li>
<li>安装vscode
<code>yaourt vscode</code>
<code>3</code></li>
<li>安装数据库管理工具
<code>pacman -S dbeaver</code></li>
<li>安装pycharm
<code>pacman -S pycharm</code></li>
<li>xmind思维导图
<code>yaourt xmind</code></li>
<li>安装备份工具
<code>yaourt fsarchiver</code></li>
<li>待办事项
<code>yaourt -S go-for-it-git</code></li>
<li>视频录制软件
<code>yaourt simplescreenrecorder</code></li>
<li>屏幕录像工具
<code>yaourt green-recorder</code>
选择qt那个</li>
<li>markdown编辑工具
<code>pacman -S typora</code></li>
<li>跨所有设备进行连接的工具
<code>kdeconnect</code></li>
<li>分层记录应用程序，具有丰富的文本和语法突出显示功能，可将数据存储在单个xml或sqlite文件中
<code>pacman -S cherrytree</code></li>
<li>深度截图工具
<code>pacman -S deepin-screenshot</code></li>
<li>适合写markdown的工具Haroopad
<code>yaourt -S haroopad</code></li>
<li>sakura终端、支持修改背景图</li>
<li>文件管理器
<code>pacman -S krusader</code></li>
<li>文件管理器
<code>pacman -S dolphin</code></li>
<li>压缩解压缩
<code>pacman -S ark</code></li>
<li>文本编辑器
<code>pacman -S kate</code></li>
<li>终端
<code>pacman -S konsole</code></li>
<li>文档查看器
<code>okular</code></li>
<li>查看系统信息
<code>pacman -S screenfetch</code>
打开终端自动显示<br/>
nano ~/.bashrc 加入 screenfetch</li>
<li>翻墙
<code>pacman -S v2ray</code></li>
<li>密码相关
<code>pacman -S keepass</code></li>
<li>hosts文件相关
<code>yaourt -S switchhosts-bin</code></li>
<li>备份工具
<code>yaourt -S qt4-fsarchiver</code></li>
<li>安装pdf管理工具buka
<code>yaourt -S buka</code></li>
<li>安装sshfs
<code>pacman -S sshfs</code></li>
<li>webdav服务wsgidav
<code>pip install wsgidav</code></li>
<li>系统工具
<code>iftop\htop\atop</code></li>
<li>chm阅读器
<code>kchmviewer</code></li>
<li>下载
<code>aria2\uget</code>
<code>pip install youtube-dl</code>
<code>yaourt persepolis</code></li>
<li>web相关
<code>nginx、nodejs</code></li>
<li>火狐汉化
<code>http://releases.mozilla.org/pub/firefox/releases/59.0/linux-x86_64/xpi/（注意版本）</code></li>
<li>grub修改
<code>yaourt -S grub-customizer</code></li>
<li>webdav文件共享
<code>pacman -S phodav</code></li>
<li>网盘同步
<code>yaourt -S cloudcross</code></li>
<li>日志查看工具
<code>pacman -S ksystemlog</code></li>
<li>二进制编辑器
<code>pacman -S okteta</code></li>
<li>ssh爆破防护
<code>pacman -S sshguard</code></li>
<li>smb共享工具
<code>pacman -S smb4k</code></li>
<li>文档编辑工具
<code>marktext</code></li>
<li>命令补全工具
<code>pacman -S bash-completion</code></li>
<li>文件共享、webdav、ftp等
<code>pacman -S filezilla</code></li>
<li>文件同步
<code>syncthing</code></li>
<li>使用ftp
<code>sudo pacman -S vsftpd</code>
详细设置 /etc/vsftpd.conf<br/>
允许本地用户登录 local_enable=YES<br/>
可以进行写的操作 write_enable=YES<br/>
设定最大连接传输时间 data_connection_timeout=3600<br/>
设定支持异步传输的功能 async_abor_enable=YES</li>
<li>剪贴板增强工具
<code>pacman -S copyq</code></li>
<li>局域网共享工具dukto
<code>yaourt -S dukto</code></li>
</ul>

<h1 id="toc_1">安装 vmtools</h1>

<pre class="line-numbers"><code class="language-shell">pacman -S open-vm-tools
pacman -S linux-headers
yaourt -S open-vm-tools-dkms
open-vm-tools-desktop
gtkmm
gtkmm3
systemctl enable vmware-vmblock-fuse
systemctl enable vmtoolsd
</code></pre>

<h1 id="toc_2">详细设置</h1>

<ul>
<li>fish_config打开fish的web设置界面</li>
<li>终端设置颜色和背景透明</li>
<li>kate设置行号和代码高亮</li>
<li>关闭钱包
<code>sudo pacman -S kwalletmanager</code></li>
<li>区域设置</li>
<li>输入法问题可以输入 fcitx-diagnose 来查看日志，通常就有答案了。</li>
<li>git下载太慢，配置git代理：nano ~/.gitconfig<br/>
[https]<br/>
    proxy = socks5://127.0.0.1:1080<br/>
[http]<br/>
    proxy = socks5://127.0.0.1:1080<br/>
然后修改hosts：nano /etc/hosts<br/>
151.101.72.249 <a href="http://global-ssl.fastly.Net">http://global-ssl.fastly.Net</a><br/>
192.30.253.112 <a href="http://github.com">http://github.com</a></li>
<li>typora段错误的解决方法：<a href="https://aur.archlinux.org/packages/typora/">https://aur.archlinux.org/packages/typora/</a></li>
<li>使用nfs共享文件：pacman -S nfs-utils，参考：<a href="https://wiki.archlinux.org/index.php/NFS#Installation">https://wiki.archlinux.org/index.php/NFS#Installation</a><br/>
1、配置 /etc/exports
<code>
/home 192.168.48.142(rw,sync,no_root_squash)   这里可以写客户端ip<br/>
exportfs -rav<br/>
exportfs -v<br/>
systemctl start nfs-server.service<br/>
修改 /etc/nfs.conf 来增加安全性<br/>
[nfsd]<br/>
host=192.168.48.142<br/>
# Alternatively, you can use your hostname.<br/>
# host=myhostname
</code>
如果上面的启动nfs报错，重启电脑<br/>
showmount -e 192.168.48.136(服务器端IP)<br/>
若出现：Export list for 192.168.48.142:<br/>
/home 192.168.1.120字眼则证明通过<br/>
下面贴出我敲的：<br/>
╰─&gt;\( showmount -e 192.168.48.136<br/>
Export list for 192.168.48.136:<br/>
/home 192.168.48.142<br/>
┬─[lonelyor@lonelyor:~]─[16时00分18秒]<br/>
╰─&gt;\) mount -t nfs 192.168.48.136<br/>
mount: 只有 root 用户能使用“--types”选项<br/>
┬─[lonelyor@lonelyor:~]─[16时03分14秒]<br/>
╰─&gt;\( sudo mount -t nfs 192.168.48.136<br/>
mount: 192.168.48.136: can&#39;t find in /etc/fstab.<br/>
┬─[lonelyor@lonelyor:~]─[16时03分18秒]<br/>
╰─&gt;\) sudo mount -t nfs 192.168.48.136:/home /mnt/tmp/<br/>
然后就ok了。<br/>
解除挂载用umount</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python 计算代码运行时间的方法]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15543568335321.html"/>
    <updated>2019-04-04T13:47:13+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15543568335321.html</id>
    <content type="html"><![CDATA[
<p>话不多说，直接上代码：<br/>
方法一：</p>

<pre class="line-numbers"><code class="language-text">import time
start = time.time()
run_function()
end = time.time()
print(end)
</code></pre>

<p>方法二：</p>

<pre class="line-numbers"><code class="language-text">import time
start = time.clock()
run_function()
end = time.clock()
print(end-start)
</code></pre>

<h2 id="toc_0">秒级计算</h2>

<p>上述方法 print 的结果是原始时间数据，可以对其进行加减运算，但是结果不太直观，通常我们统计时间是以秒为单位。<br/>
下面给出秒级计算的代码:</p>

<pre class="line-numbers"><code class="language-text">import time
start = time.time()
run_function()
end = time.time()
print(int(end))
</code></pre>

<h2 id="toc_1">扩展</h2>

<pre class="line-numbers"><code class="language-text">import time
import datetime

t = time.time()

print (t)                       #原始时间数据
print (int(t))                  #秒级时间戳
print (int(round(t * 1000)))    #毫秒级时间戳

nowTime = lambda:int(round(t * 1000))
print (nowTime());              #毫秒级时间戳，基于lambda

print (datetime.datetime.now().strftime(&#39;%Y-%m-%d %H:%M:%S&#39;))   #日期格式化
</code></pre>

<p>返回为：    </p>

<pre class="line-numbers"><code class="language-text">1554358917.381631
1554358917
1554358917382
1554358917382
2019-04-04 14:21:57
</code></pre>

<p>将秒级时间戳转为日期     </p>

<pre class="line-numbers"><code class="language-text">ts = 1515774430
dt = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime(ts))
print(dt)
</code></pre>

<p>返回<br/><br/>
<code>2018-01-13 00:27:10</code></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python程序退出的几种方式]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15543511984993.html"/>
    <updated>2019-04-04T12:13:18+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15543511984993.html</id>
    <content type="html"><![CDATA[
<p>最常见的方式是使用 sys 库中的 sys.exit() 方法。不需要考虑平台等因素的影响，一般是退出Python程序的首选方法。</p>

<p>该方法中包含一个参数status，默认为0，表示正常退出，也可以为1，表示异常退出。</p>

<pre class="line-numbers"><code class="language-text">sys.exit()
sys.exit(0)
sys.exit(1)
</code></pre>

<p>该方法引发的是一个SystemExit异常(这是唯一一个不会被认为是错误的异常)，当没有设置捕获这个异常将会直接退出程序执行，当然也可以捕获这个异常进行一些其他操作。</p>

<p>其他方法非首选因此不详细介绍，这里简单提一下，具体信息自行百度。</p>

<p>其他方法有：<br/>
os._exit()<br/>
os.kill() 仅用于 unix 平台<br/>
os.popen() 仅用于 windows 平台</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python 安装 hashlib 库报错]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15543484192219.html"/>
    <updated>2019-04-04T11:26:59+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15543484192219.html</id>
    <content type="html"><![CDATA[
<p>报错信息如下：</p>

<pre class="line-numbers"><code class="language-text">      File &quot;/private/var/folders/zx/znk609rs7lvfy1s28xzb2gdm0000gn/T/pip-install-gryu60jd/hashlib/hashlib.py&quot;, line 80
        raise ValueError, &quot;unsupported hash type&quot;
                        ^
    SyntaxError: invalid syntax
</code></pre>

<p>此时需要安装 openssh</p>

<p>Mac 上使用：<code>brew install openssh</code> 然后重装 python，然后<code>pip install hashlib</code>，mmp，还是装不上报错。</p>

<p>然后问了一下开发，发现不需要装，直接 import 就能用，试了一下发现果然如此。</p>

<p>好了，能用 hashlib 库就行，别的不管。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VMware Fusion 端口映射]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15542128440180.html"/>
    <updated>2019-04-02T21:47:24+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15542128440180.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>文章转载自：<a href="https://blog.csdn.net/weixin_43302757/article/details/82911332">https://blog.csdn.net/weixin_43302757/article/details/82911332</a></p>
</blockquote>

<p>Windows版本VM进行端口映射有相关的设置界面，但是Mac系统的VM（VMware Fusion）没有。Google 以下找到相关方法。具体步骤如下</p>

<p>打开配置文件<br/>
<code>sudo vi  /Library/Preferences/VMware\ Fusion/vmnet8/nat.conf</code><br/>
找到如下配置</p>

<pre class="line-numbers"><code class="language-text">[incomingtcp]
# Use these with care - anyone can enter into your VM through these...
# The format and example are as follows:
#&lt;external port number&gt; = &lt;VM&#39;s IP address&gt;:&lt;VM&#39;s port number&gt;
23 = 172.16.161.129:22 #将IP172.16.161.129虚拟机的22 端口映射到主机23端口
</code></pre>

<p>重启VM的网络服务</p>

<pre class="line-numbers"><code class="language-text">sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --stop
sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --start
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux sudo配置免密及排除部分命令]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15542101741047.html"/>
    <updated>2019-04-02T21:02:54+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15542101741047.html</id>
    <content type="html"><![CDATA[
<p><code>lonelyor ALL=(ALL) NOPASSWD:ALL, !/usr/bin/reboot, !/sbin/reboot, !/sbin/ifconfig, !/sbin/shutdown, !/sbin/route, !/sbin/ip</code></p>

<p>即lonelyor可以免密码执行除reboot、ifconfig、shutdown、route、ip之外的指令。</p>

<p><strong>注意，/etc/sudoers的命令是顺序执行，添加在错误的位置（比如 %sudo ALL=(ALL:ALL) ALL 之前）是无效的。</strong></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linux sudo:/etc/sudoers 可被任何人写 解决方案]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15542098568070.html"/>
    <updated>2019-04-02T20:57:36+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15542098568070.html</id>
    <content type="html"><![CDATA[
<p>只需要使用<code>su -</code>进入 root<br/>
然后<code>cd /etc</code>，使用<code>chmod 0440 sudoers</code>将权限改回来即可。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[debian or ubuntu 修改终端欢迎语]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15542044701566.html"/>
    <updated>2019-04-02T19:27:50+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15542044701566.html</id>
    <content type="html"><![CDATA[
<p>与其他 linux 不太一样哦。Debian 系直接修改/etc/motd文件重登录后是无效的。</p>

<p>因为这里/etc/motd是一个符号链接，指向/var/run/motd，应该 是一个启动后在生成的文件。在版本12.04中，找到生成的脚本在目录/etc/update-motd.d/中<br/>
<code>sudo nano /etc/update-motd.d/10-uname</code><br/>
在 10-uname 中可以添加命令，比如：<code>cat /home/test.txt</code>。即可展示出 test.txt 中的内容。</p>

<p>修改后用：sudo run-parts /etc/update-motd.d 去执行就会立即见到效果，而不用反复注销登录。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql登录提示ERROR 1524 (HY000): Plugin 'unix_socket' is not loaded解决方法]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15542027955936.html"/>
    <updated>2019-04-02T18:59:55+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15542027955936.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>参考文章：<a href="https://blog.csdn.net/u012804180/article/details/80801351">https://blog.csdn.net/u012804180/article/details/80801351</a></p>
</blockquote>

<p><figure><img src="media/15542027955936/15542028794210.jpg" alt=""/></figure></p>

<p>上面这篇才是正解，别的文章仿佛在放狗屁。<br/>
最烦那些转载文章时照抄照搬，自己完全不验证的人；也很烦那些写文章写得不清不楚的人。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vmware三种网络模式详解]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15538461504138.html"/>
    <updated>2019-03-29T15:55:50+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15538461504138.html</id>
    <content type="html"><![CDATA[
<p>文章详情请参阅：<br/>
<a href="https://note.youdao.com/ynoteshare1/index.html?id=236896997b6ffbaa8e0d92eacd13abbf&amp;type=note">https://note.youdao.com/ynoteshare1/index.html?id=236896997b6ffbaa8e0d92eacd13abbf&amp;type=note</a><br/>
或<br/>
<a href="https://www.cnblogs.com/linjiaxin/p/6476480.html">https://www.cnblogs.com/linjiaxin/p/6476480.html</a></p>

<p>感谢作者的付出。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[虚拟机安装win10操作系统]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15538425408524.html"/>
    <updated>2019-03-29T14:55:40+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15538425408524.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>本片文章是为新手准备的</p>
</blockquote>

<p>虚拟机安装win10可以查看以下教程：<br/>
<a href="http://baijiahao.baidu.com/s?id=1597148758310739517&amp;wfr=spider&amp;for=pc">http://baijiahao.baidu.com/s?id=1597148758310739517&amp;wfr=spider&amp;for=pc</a></p>

<p>若原文链接失效，则可以百度搜索“虚拟机安装win10操作系统”</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 终端设置欢迎页]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15532282104799.html"/>
    <updated>2019-03-22T12:16:50+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15532282104799.html</id>
    <content type="html"><![CDATA[
<p><code>cd /etc</code><br/>
<code>sudo pico motd</code><br/>
输入密码后会打开nano，然后在里面输入图案或者文字。然后保存后退出，之后打开终端就能看到欢迎页了。</p>

<p>其实本质就是在/etc目录下创建文件 motd，然后往里面写内容即可。</p>

<p>我只是添加了一段文字，结果如下：</p>

<p><figure><img src="media/15532282104799/15532284069773.jpg" alt=""/></figure></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[古语]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15532149133328.html"/>
    <updated>2019-03-22T08:35:13+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15532149133328.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[excel 工作表插入当前时间和日期]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15523826250881.html"/>
    <updated>2019-03-12T17:23:45+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15523826250881.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>参考链接：<a href="https://jingyan.baidu.com/article/75ab0bcbb03035d6864db203.html">https://jingyan.baidu.com/article/75ab0bcbb03035d6864db203.html</a></p>
</blockquote>

<p>1、选定单元格然后同时按<code>CTRL+;</code>可以快速设置日期。<br/>
2、在单元格中输入函数<code>=TODAY()</code>然后回车也可以快速设置日期。<br/>
3、选定单元格然后同时按下<code>Ctrl+Shift+；</code>可以快速设置当前时刻的时间。<br/>
4、在单元格中输入函数<code>=NOW()</code>然后回车可以显示当前时刻的时间。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GTD 管理法]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15520392147631.html"/>
    <updated>2019-03-08T18:00:14+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15520392147631.html</id>
    <content type="html"><![CDATA[
<p>GTD 分为5个步骤</p>

<ul>
<li>收集</li>
<li>理清</li>
<li>组织</li>
<li>执行</li>
<li>回顾</li>
</ul>

<p>每一步都很重要，但是我觉得比较难的还是执行。</p>

<p>执行的精髓是一定要去做</p>

<p>不去做的原因可能是因为目标困难，难以去实现，此时要降低困难度（举个例子：每天都要读书，然后规定自己每天读2页而不是每天读50页，这样每天就能至少读2页，时间充足的话还能多读48页，主动去坚持才是最棒的）</p>

<p>科学的养成一个习惯，在前期我们尽量做到：</p>

<ul>
<li>这个习惯划分到每天的目标量足够小，这样易获得成就感，也没有放弃的理由。</li>
<li>不间断，不管这一天发生了什么，哪怕是你削减目标量，也要每天都去做。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用四象限管理任务]]></title>
    <link href="http://www.lonelyor.org/lonelyorWiki/15520390232741.html"/>
    <updated>2019-03-08T17:57:03+08:00</updated>
    <id>http://www.lonelyor.org/lonelyorWiki/15520390232741.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>文章来自滴答清单帮助中心</p>
</blockquote>

<p>四象限是一种常用的时间管理理论，它将需要处理的事按“重要”和“紧急”两个维度划分，并对应到四种待处理状态中，帮助你决定下一步应该做什么。</p>

<p><figure><img src="media/15520390232741/15520390786216.jpg" alt=""/></figure></p>

<p>通常，你需要马上执行“急事”，确保它们不会延期，比如：</p>

<p>本周五前必须冻结项目到可发布状态<br/>
明天女友生日，所以今天要去买礼物<br/>
但长远来看，最好将重心放在“要事”上。想想看，需要马上执行的“急事”是否曾经也是“要事”？早点把“要事”消化掉就不会压力满满了。</p>

<p>不过在实际情况中，恼人的“烦事”会比预期多。这些突发事件本不在你的计划中，但又不得不尽快解决，比如：</p>

<p>小区门禁升级需要去物业更换房卡<br/>
亲朋好友突然造访，向你咨询些事情<br/>
因为迫切的呼声让你产生“这很重要”的错觉——实际上就算重要也是对别人而言。一旦进入忙碌的状态，你可能更想在结束后去打个游戏、看看综艺节目、约朋友聊个天放松放松......乍一想没什么不对是吧？忙碌之后确实需要缓缓，但是朋友，你还记得第一象限里的“要事”吗？</p>

<p>所以，减少在第三象限的忙碌，尽早处理第二象限的事情，合理分配时间，去做对你而言重要的事情，才是四象限理论的核心。</p>

<h2 id="toc_0">一、利用清单创建四象限系统</h2>

<p>如果你的事情不太多，那么使用这种方式可以快速搭建起简易的四象限任务系统。你只需要做好以下四步，就能在滴答清单里实践四象限了：</p>

<p>创建四个清单，对应四个象限<br/>
将这四个清单放进同一个文件夹“四象限”<br/>
将收集箱的任务移动到对应清单<br/>
每天在“四象限”文件夹下查看并及时调整任务的状态<br/>
在处理收集箱前，先在侧边栏创建四个清单，分别和四个象限对应。然后为它们创建文件夹“四象限”。</p>

<p><figure><img src="media/15520390232741/15520390924137.jpg" alt=""/></figure></p>

<blockquote>
<p>注：长按清单A并拖放到清单B上即可为清单A和B创建文件夹。推荐给清单设置不同的颜色，更好的区分任务在哪个象限。</p>
</blockquote>

<p>以后每天处理收集箱时，就可以将任务逐条移动到对应的清单内。</p>

<ul>
<li>今天去给女友买生日礼物 → 重要且紧急</li>
<li>打电话给小文，帮忙购买《哈利波特 8》英文原版书 → 重要不紧急</li>
<li>明天下午2点去面试 → 重要且紧急</li>
<li>买回家的火车票 → 重要不紧急</li>
<li>帮赵星问推荐信的书写要求 → 不重要但紧急</li>
<li>预定纪念款球衣 → 不重要不紧急<br/>
在“四象限”文件夹的“所有任务”中，选择「按清单排序」，就能清晰的看到每个象限中都有什么事情。</li>
</ul>

<p><figure><img src="media/15520390232741/15520391146931.jpg" alt=""/></figure></p>

<blockquote>
<p>注：当某件事情从某个象限转化到其他象限时，你可以直接在文件夹的“所有任务”中，长按这条任务，并拖动到对应的清单<br/>
注：如果需要提醒，记得给任务设置好日期和时间</p>
</blockquote>

<p>接下来，就可以每天查看、处理并调整任务——做完的事情及时打勾，有变更的事情及时移动。</p>

<ul>
<li>优先执行重要且紧急的事件</li>
<li>尽量提前规划重要不紧急事件，在它们变得紧急前就完成</li>
<li>如果可以的话，试着将不重要但紧急的事情交由他人处理，或者学会对别人的请求说 Sorry</li>
<li><p>需要控制去做不重要不紧急事件的时间，不要过度放松</p>
<h2 id="toc_1">二、利用自定义智能清单创建四象限系统</h2>
<p>如果你已经创建了“工作”、“学习”、“生日提醒”等不同的类别的清单，那么把任务从“生日提醒”清单移动到“重要且紧急”清单也许不是好的选择。这时候不妨试试创建自定义智能清单，可以在保留现有清单的基础上创建四象限系统。同样的，四个步骤即可搞定：</p></li>
<li><p>创建四个自定义智能清单，对应四个象限</p></li>
<li><p>设置好每个自定义智能清单的筛选条件</p></li>
<li><p>为收集箱的任务设置优先级和日期</p></li>
<li><p>每天在自定义智能清单里查看并处理任务<br/>
首先，进入「智能清单」，在页面底部添加自定义智能清单，分别和四个象限对应。</p></li>
</ul>

<p><figure><img src="media/15520390232741/15520391551650.jpg" alt=""/></figure></p>

<p>几天内的事情算紧急？什么状态的任务算重要？创建自定义智能清单时，记得给每个象限都设置好对应的筛选规则。例如，“重要且紧急”的筛选条件可以设置如下：</p>

<p><figure><img src="media/15520390232741/15520391631530.jpg" alt=""/></figure></p>

<ul>
<li>日期选中「今天」、「明天」</li>
<li>优先级选中「高优先级」、「中优先级」<br/>
自定义清单创建完，你的四象限系统框架就搭好了。以后处理收集箱时，除了移动到对应分类，也要记得给任务都设置好优先级和日期，如果一些不紧急的事情无法估计什么时候完成，可以只设置优先级。</li>
</ul>

<p><figure><img src="media/15520390232741/15520391757107.jpg" alt=""/></figure></p>

<blockquote>
<p>注：任务前面的小方框，红色代表高优先级，黄色代表中优先级，蓝色代表低优先级，灰色代表无优先级。其中，红色和黄色都可以表示任务是重要的，蓝色和灰色则可以表示任务是不重要的。任务后面的日期，则代表了紧急程度。</p>
</blockquote>

<ul>
<li>今天去给女友买生日礼物 → 中优先级，今天下午5点</li>
<li>明天下午2点去面试 → 高优先级，明天下午2点</li>
<li>买回家的火车票 → 高优先级，没有日期</li>
<li>帮赵星问推荐信的书写要求 → 低优先级，明天</li>
<li>预定纪念款球衣 → 无优先级，下周三<br/>
设置优先级和日期时，你不需要去思考这些事属于哪个象限，只需要根据实际情况设置好即可，剩下的工作都交给自定义智能清单，它会帮你将符合条件的任务都筛选出来。</li>
</ul>

<p><figure><img src="media/15520390232741/15520391940195.jpg" alt=""/></figure></p>

<p>并且，你不用手动去调整任务的状态，如果一个重要不紧急的任务没有被及时处理，它会自动从重要不紧急转移到重要且紧急。不过，你应该不希望这事儿发生吧:)</p>

<p>以上两种方法都能帮助你在滴答里实践四象限系统，快来试试吧。别忘记四象限的核心：去做对你真正重要的事儿，合理分配你的时间。</p>

]]></content>
  </entry>
  
</feed>
